{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# TFM"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Tabla de contenidos\n",
    "\n",
    "* [1. Objetivo](#cap1)\n",
    "    * [1.1. Participantes](#section_1_1)\n",
    "* [2. Librerías y carga de datos](#cap2)\n",
    "* [3. Feature engineering](#cap3)\n",
    "* [4. EDA](#cap4)\n",
    "    * [4.1. EDA reddit](#section_4_1)\n",
    "    * [4.2. EDA precio GME](#section_4_1)\n",
    "* [5. Análisis sentimientos](#cap5)\n",
    "    * [5.1. Clasificación sentimientos títulos](#section_5_1)\n",
    "        * [5.1.1. Modelo BERT](#section_5_1_1)\n",
    "        * [5.1.2. Librería NLTK](#section_5_1_2)\n",
    "    * [5.2. Clasificación sentimientos post](#section_5_2)\n",
    "        * [5.2.1. Modelo BERT](#section_5_2_1)\n",
    "        * [5.2.2. Librería NLTK](#section_5_2_2)\n",
    "    * [5.3. Análisis relación sentimientos y precios de la acción](#section_5_3)\n",
    "        * [Section 1.2.1](#section_1_2_1)\n",
    "        * [Section 1.2.2](#section_1_2_2)\n",
    "        * [Section 1.2.3](#section_1_2_3)\n",
    "* [6. Análisis sentimientos post](#cap6)\n",
    "* [7. Conclusiones](#cap7)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Objetivo <a class=\"anchor\" id=\"cap1\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Este proyecto tiene como propósito que los estudiantes identifiquen un problema abierto en el área del análisis de datos apoyado por técnicas de Inteligencia Artificial en el ámbito de su preferencia (Educación, ambiente, criminología, gobierno, etc.). Una vez identificado el problema el estudiante aplicará los conocimientos y competencias, vistos y adquiridos en el Master para hacer un tratamiento de datos al nivel que escoja (Descriptivo, diagnóstico, predictivo, prescriptivo)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.1. Participantes <a class=\"anchor\" id=\"section_1_1\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Mireya Harillo Gámez\n",
    "* Óscar Tienda Beteta\n",
    "* Henry Ocaña Luna\n",
    "* David de la Torre Amengual"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Librerías y carga de datos <a class=\"anchor\" id=\"cap2\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: mplfinance in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (0.12.7a17)\n",
      "Requirement already satisfied: pandas in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from mplfinance) (1.2.4)\n",
      "Requirement already satisfied: matplotlib in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from mplfinance) (3.4.2)\n",
      "Requirement already satisfied: pyparsing>=2.2.1 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from matplotlib->mplfinance) (2.4.7)\n",
      "Requirement already satisfied: pillow>=6.2.0 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from matplotlib->mplfinance) (8.3.1)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from matplotlib->mplfinance) (0.10.0)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from matplotlib->mplfinance) (2.8.2)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from matplotlib->mplfinance) (1.3.1)\n",
      "Requirement already satisfied: numpy>=1.16 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from matplotlib->mplfinance) (1.18.5)\n",
      "Requirement already satisfied: six in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from cycler>=0.10->matplotlib->mplfinance) (1.16.0)\n",
      "Requirement already satisfied: pytz>=2017.3 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from pandas->mplfinance) (2021.1)\n",
      "Requirement already satisfied: transformers in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (4.10.0)\n",
      "Requirement already satisfied: sacremoses in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from transformers) (0.0.45)\n",
      "Requirement already satisfied: tokenizers<0.11,>=0.10.1 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from transformers) (0.10.3)\n",
      "Requirement already satisfied: regex!=2019.12.17 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from transformers) (2021.8.28)\n",
      "Requirement already satisfied: huggingface-hub>=0.0.12 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from transformers) (0.0.16)\n",
      "Requirement already satisfied: tqdm>=4.27 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from transformers) (4.62.1)\n",
      "Requirement already satisfied: filelock in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from transformers) (3.0.12)\n",
      "Requirement already satisfied: requests in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from transformers) (2.26.0)\n",
      "Requirement already satisfied: packaging in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from transformers) (21.0)\n",
      "Requirement already satisfied: pyyaml>=5.1 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from transformers) (5.4.1)\n",
      "Requirement already satisfied: numpy>=1.17 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from transformers) (1.18.5)\n",
      "Requirement already satisfied: typing-extensions in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from huggingface-hub>=0.0.12->transformers) (3.10.0.2)\n",
      "Requirement already satisfied: pyparsing>=2.0.2 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from packaging->transformers) (2.4.7)\n",
      "Requirement already satisfied: colorama in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from tqdm>=4.27->transformers) (0.4.4)\n",
      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from requests->transformers) (1.26.6)\n",
      "Requirement already satisfied: charset-normalizer~=2.0.0 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from requests->transformers) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from requests->transformers) (3.2)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from requests->transformers) (2021.5.30)\n",
      "Requirement already satisfied: six in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from sacremoses->transformers) (1.16.0)\n",
      "Requirement already satisfied: joblib in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from sacremoses->transformers) (1.0.1)\n",
      "Requirement already satisfied: click in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from sacremoses->transformers) (8.0.1)\n"
     ]
    }
   ],
   "source": [
    "!pip install mplfinance\n",
    "!pip install transformers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd # Tratamiento de datos en formato tabular\n",
    "import matplotlib.pyplot as plt #Visualizaciones\n",
    "%matplotlib inline\n",
    "import seaborn as sns # Visualizaciónes\n",
    "import IPython # Leer imágenes desde URL\n",
    "import mplfinance as mpf #Gráficos de velas\n",
    "import torch \n",
    "#import transformers\n",
    "from transformers import AutoTokenizer, AutoModelForSequenceClassification\n",
    "import os.path # Comprobación de existencia de ficheros\n",
    "from datetime import datetime # Consultar fecha actual\n",
    "import nltk\n",
    "#nltk.downloader.download('vader_lexicon')\n",
    "from nltk.sentiment.vader import SentimentIntensityAnalyzer as SIA\n",
    "from nltk.util import ngrams\n",
    "from nltk import word_tokenize\n",
    "from nltk.stem import PorterStemmer\n",
    "from nltk.stem import WordNetLemmatizer\n",
    "import re # Tratamiento de expresiones regulares"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Instalamos librerias para análisis de sentimientos."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A continuación cargamos los datos de reddit con los que vamos a trabajar y mostramos una porción."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6</td>\n",
       "      <td>1.611863e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:37:41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:32:10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>0</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>47</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading “to g...</td>\n",
       "      <td>2021-01-28 21:30:35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:28:57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:26:56</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title  score      id  \\\n",
       "0  It's not about the money, it's about sending a...     55  l6ulcx   \n",
       "1  Math Professor Scott Steiner says the numbers ...    110  l6uibd   \n",
       "2                                    Exit the system      0  l6uhhn   \n",
       "3  NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...     29  l6ugk6   \n",
       "4  Not to distract from GME, just thought our AMC...     71  l6ufgy   \n",
       "\n",
       "                                                 url  comms_num       created  \\\n",
       "0                    https://v.redd.it/6j75regs72e61          6  1.611863e+09   \n",
       "1                    https://v.redd.it/ah50lyny62e61         23  1.611862e+09   \n",
       "2  https://www.reddit.com/r/wallstreetbets/commen...         47  1.611862e+09   \n",
       "3  https://sec.report/Document/0001193125-21-019848/         74  1.611862e+09   \n",
       "4                https://i.redd.it/4h2sukb662e61.jpg        156  1.611862e+09   \n",
       "\n",
       "                                                body            timestamp  \n",
       "0                                                NaN  2021-01-28 21:37:41  \n",
       "1                                                NaN  2021-01-28 21:32:10  \n",
       "2  The CEO of NASDAQ pushed to halt trading “to g...  2021-01-28 21:30:35  \n",
       "3                                                NaN  2021-01-28 21:28:57  \n",
       "4                                                NaN  2021-01-28 21:26:56  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_raw_dataset = pd.read_csv('https://raw.githubusercontent.com/david-dlta/recursosTFM/main/reddit_wsb.csv')\n",
    "reddit_raw_dataset.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Hacemos lo mismo con los datos de los precios de las acciones de GameStop Corp. (GME)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>08/20/2021</td>\n",
       "      <td>159.30</td>\n",
       "      <td>1154858</td>\n",
       "      <td>153.80</td>\n",
       "      <td>160.0900</td>\n",
       "      <td>153.2400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>08/19/2021</td>\n",
       "      <td>152.90</td>\n",
       "      <td>1196548</td>\n",
       "      <td>156.77</td>\n",
       "      <td>157.9899</td>\n",
       "      <td>150.7800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>08/18/2021</td>\n",
       "      <td>157.05</td>\n",
       "      <td>1411842</td>\n",
       "      <td>163.25</td>\n",
       "      <td>165.6000</td>\n",
       "      <td>156.7500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>08/17/2021</td>\n",
       "      <td>163.55</td>\n",
       "      <td>1215938</td>\n",
       "      <td>161.19</td>\n",
       "      <td>169.4800</td>\n",
       "      <td>161.1000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>08/16/2021</td>\n",
       "      <td>163.93</td>\n",
       "      <td>1574877</td>\n",
       "      <td>161.00</td>\n",
       "      <td>169.8799</td>\n",
       "      <td>159.1601</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date   Close   Volume    Open      High       Low\n",
       "0  08/20/2021  159.30  1154858  153.80  160.0900  153.2400\n",
       "1  08/19/2021  152.90  1196548  156.77  157.9899  150.7800\n",
       "2  08/18/2021  157.05  1411842  163.25  165.6000  156.7500\n",
       "3  08/17/2021  163.55  1215938  161.19  169.4800  161.1000\n",
       "4  08/16/2021  163.93  1574877  161.00  169.8799  159.1601"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gme_raw_dataset = pd.read_csv('https://raw.githubusercontent.com/david-dlta/recursosTFM/main/GME_price.csv')\n",
    "gme_raw_dataset.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Feature engineering <a class=\"anchor\" id=\"cap3\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Los datos con los que contamos de partida en el dataset no se ajustan totalmente a las nuestras necesidades. Por ello debemos realizar algunas transformaciones sobre estos para poder llevar a cabo el proyecto."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Creamos tres atributos nuevos partiendo del atributo *timestamp*."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6</td>\n",
       "      <td>1.611863e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:37:41</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:32:10</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>0</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>47</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading “to g...</td>\n",
       "      <td>2021-01-28 21:30:35</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:28:57</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:26:56</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52106</th>\n",
       "      <td>Everything I've learned about being on Wall St...</td>\n",
       "      <td>1011</td>\n",
       "      <td>od9xfn</td>\n",
       "      <td>https://v.redd.it/dfkjjyjae3971</td>\n",
       "      <td>87</td>\n",
       "      <td>1.625359e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-07-04 03:43:04</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>2021</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52107</th>\n",
       "      <td>I Accidentally YOLOed Half My Portfolio After ...</td>\n",
       "      <td>510</td>\n",
       "      <td>od97ek</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>288</td>\n",
       "      <td>1.625357e+09</td>\n",
       "      <td>tl;dr at bottom\\n\\nSo after using DD from [u/C...</td>\n",
       "      <td>2021-07-04 02:55:38</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>2021</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52108</th>\n",
       "      <td>$53k TO $306K in just 2 days.</td>\n",
       "      <td>1190</td>\n",
       "      <td>od7008</td>\n",
       "      <td>https://i.redd.it/k0pkc2m4i2971.png</td>\n",
       "      <td>237</td>\n",
       "      <td>1.625349e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-07-04 00:42:06</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>2021</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52109</th>\n",
       "      <td>Average Annual Return on Investments for WSB</td>\n",
       "      <td>74</td>\n",
       "      <td>od77kx</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>194</td>\n",
       "      <td>1.625349e+09</td>\n",
       "      <td>I was having a discussion with my friends abou...</td>\n",
       "      <td>2021-07-04 00:54:20</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>2021</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52110</th>\n",
       "      <td>Genuine question about hypothetical stock shor...</td>\n",
       "      <td>19</td>\n",
       "      <td>od75w3</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>64</td>\n",
       "      <td>1.625349e+09</td>\n",
       "      <td>So I want to start this off by saying you prob...</td>\n",
       "      <td>2021-07-04 00:51:34</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>2021</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>52111 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   title  score      id  \\\n",
       "0      It's not about the money, it's about sending a...     55  l6ulcx   \n",
       "1      Math Professor Scott Steiner says the numbers ...    110  l6uibd   \n",
       "2                                        Exit the system      0  l6uhhn   \n",
       "3      NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...     29  l6ugk6   \n",
       "4      Not to distract from GME, just thought our AMC...     71  l6ufgy   \n",
       "...                                                  ...    ...     ...   \n",
       "52106  Everything I've learned about being on Wall St...   1011  od9xfn   \n",
       "52107  I Accidentally YOLOed Half My Portfolio After ...    510  od97ek   \n",
       "52108                      $53k TO $306K in just 2 days.   1190  od7008   \n",
       "52109       Average Annual Return on Investments for WSB     74  od77kx   \n",
       "52110  Genuine question about hypothetical stock shor...     19  od75w3   \n",
       "\n",
       "                                                     url  comms_num  \\\n",
       "0                        https://v.redd.it/6j75regs72e61          6   \n",
       "1                        https://v.redd.it/ah50lyny62e61         23   \n",
       "2      https://www.reddit.com/r/wallstreetbets/commen...         47   \n",
       "3      https://sec.report/Document/0001193125-21-019848/         74   \n",
       "4                    https://i.redd.it/4h2sukb662e61.jpg        156   \n",
       "...                                                  ...        ...   \n",
       "52106                    https://v.redd.it/dfkjjyjae3971         87   \n",
       "52107  https://www.reddit.com/r/wallstreetbets/commen...        288   \n",
       "52108                https://i.redd.it/k0pkc2m4i2971.png        237   \n",
       "52109  https://www.reddit.com/r/wallstreetbets/commen...        194   \n",
       "52110  https://www.reddit.com/r/wallstreetbets/commen...         64   \n",
       "\n",
       "            created                                               body  \\\n",
       "0      1.611863e+09                                                NaN   \n",
       "1      1.611862e+09                                                NaN   \n",
       "2      1.611862e+09  The CEO of NASDAQ pushed to halt trading “to g...   \n",
       "3      1.611862e+09                                                NaN   \n",
       "4      1.611862e+09                                                NaN   \n",
       "...             ...                                                ...   \n",
       "52106  1.625359e+09                                                NaN   \n",
       "52107  1.625357e+09  tl;dr at bottom\\n\\nSo after using DD from [u/C...   \n",
       "52108  1.625349e+09                                                NaN   \n",
       "52109  1.625349e+09  I was having a discussion with my friends abou...   \n",
       "52110  1.625349e+09  So I want to start this off by saying you prob...   \n",
       "\n",
       "                 timestamp        date  year  month  day  \n",
       "0      2021-01-28 21:37:41  2021-01-28  2021      1   28  \n",
       "1      2021-01-28 21:32:10  2021-01-28  2021      1   28  \n",
       "2      2021-01-28 21:30:35  2021-01-28  2021      1   28  \n",
       "3      2021-01-28 21:28:57  2021-01-28  2021      1   28  \n",
       "4      2021-01-28 21:26:56  2021-01-28  2021      1   28  \n",
       "...                    ...         ...   ...    ...  ...  \n",
       "52106  2021-07-04 03:43:04  2021-07-04  2021      7    4  \n",
       "52107  2021-07-04 02:55:38  2021-07-04  2021      7    4  \n",
       "52108  2021-07-04 00:42:06  2021-07-04  2021      7    4  \n",
       "52109  2021-07-04 00:54:20  2021-07-04  2021      7    4  \n",
       "52110  2021-07-04 00:51:34  2021-07-04  2021      7    4  \n",
       "\n",
       "[52111 rows x 12 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset = reddit_raw_dataset.copy()\n",
    "\n",
    "reddit_dataset['date'] = pd.to_datetime(reddit_raw_dataset['timestamp']).dt.date\n",
    "reddit_dataset['year'] = pd.to_datetime(reddit_raw_dataset['timestamp']).dt.year\n",
    "reddit_dataset['month'] = pd.to_datetime(reddit_raw_dataset['timestamp']).dt.month\n",
    "reddit_dataset['day'] = pd.to_datetime(reddit_raw_dataset['timestamp']).dt.day\n",
    "#reddit_dataset['timestamp'] = reddit_dataset.rename(columns={'timestamp': 'date'})\n",
    "\n",
    "reddit_dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>week_day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>08/20/2021</td>\n",
       "      <td>159.30</td>\n",
       "      <td>1154858</td>\n",
       "      <td>153.80</td>\n",
       "      <td>160.0900</td>\n",
       "      <td>153.2400</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>08/19/2021</td>\n",
       "      <td>152.90</td>\n",
       "      <td>1196548</td>\n",
       "      <td>156.77</td>\n",
       "      <td>157.9899</td>\n",
       "      <td>150.7800</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>08/18/2021</td>\n",
       "      <td>157.05</td>\n",
       "      <td>1411842</td>\n",
       "      <td>163.25</td>\n",
       "      <td>165.6000</td>\n",
       "      <td>156.7500</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>08/17/2021</td>\n",
       "      <td>163.55</td>\n",
       "      <td>1215938</td>\n",
       "      <td>161.19</td>\n",
       "      <td>169.4800</td>\n",
       "      <td>161.1000</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>08/16/2021</td>\n",
       "      <td>163.93</td>\n",
       "      <td>1574877</td>\n",
       "      <td>161.00</td>\n",
       "      <td>169.8799</td>\n",
       "      <td>159.1601</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>08/27/2020</td>\n",
       "      <td>5.25</td>\n",
       "      <td>3384658</td>\n",
       "      <td>5.11</td>\n",
       "      <td>5.3799</td>\n",
       "      <td>5.0200</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>08/26/2020</td>\n",
       "      <td>5.11</td>\n",
       "      <td>2779664</td>\n",
       "      <td>4.97</td>\n",
       "      <td>5.2200</td>\n",
       "      <td>4.9199</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>08/25/2020</td>\n",
       "      <td>4.98</td>\n",
       "      <td>2998678</td>\n",
       "      <td>4.88</td>\n",
       "      <td>5.2500</td>\n",
       "      <td>4.8800</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>08/24/2020</td>\n",
       "      <td>4.87</td>\n",
       "      <td>4585366</td>\n",
       "      <td>5.10</td>\n",
       "      <td>5.1300</td>\n",
       "      <td>4.5600</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>08/21/2020</td>\n",
       "      <td>5.03</td>\n",
       "      <td>10642590</td>\n",
       "      <td>4.60</td>\n",
       "      <td>5.6000</td>\n",
       "      <td>4.5950</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>252 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           Date   Close    Volume    Open      High       Low   week_day\n",
       "0    08/20/2021  159.30   1154858  153.80  160.0900  153.2400     Friday\n",
       "1    08/19/2021  152.90   1196548  156.77  157.9899  150.7800   Thursday\n",
       "2    08/18/2021  157.05   1411842  163.25  165.6000  156.7500  Wednesday\n",
       "3    08/17/2021  163.55   1215938  161.19  169.4800  161.1000    Tuesday\n",
       "4    08/16/2021  163.93   1574877  161.00  169.8799  159.1601     Monday\n",
       "..          ...     ...       ...     ...       ...       ...        ...\n",
       "247  08/27/2020    5.25   3384658    5.11    5.3799    5.0200   Thursday\n",
       "248  08/26/2020    5.11   2779664    4.97    5.2200    4.9199  Wednesday\n",
       "249  08/25/2020    4.98   2998678    4.88    5.2500    4.8800    Tuesday\n",
       "250  08/24/2020    4.87   4585366    5.10    5.1300    4.5600     Monday\n",
       "251  08/21/2020    5.03  10642590    4.60    5.6000    4.5950     Friday\n",
       "\n",
       "[252 rows x 7 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gme_dataset = gme_raw_dataset.copy()\n",
    "\n",
    "gme_raw_dataset['Date'] = pd.to_datetime(gme_raw_dataset['Date'])\n",
    "\n",
    "gme_dataset['week_day'] = gme_raw_dataset['Date'].dt.day_name()\n",
    "\n",
    "gme_dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 4. EDA <a class=\"anchor\" id=\"cap4\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.1. EDA reddit <a class=\"anchor\" id=\"section_4_1\"></a>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 52111 entries, 0 to 52110\n",
      "Data columns (total 12 columns):\n",
      " #   Column     Non-Null Count  Dtype  \n",
      "---  ------     --------------  -----  \n",
      " 0   title      52111 non-null  object \n",
      " 1   score      52111 non-null  int64  \n",
      " 2   id         52111 non-null  object \n",
      " 3   url        52111 non-null  object \n",
      " 4   comms_num  52111 non-null  int64  \n",
      " 5   created    52111 non-null  float64\n",
      " 6   body       24236 non-null  object \n",
      " 7   timestamp  52111 non-null  object \n",
      " 8   date       52111 non-null  object \n",
      " 9   year       52111 non-null  int64  \n",
      " 10  month      52111 non-null  int64  \n",
      " 11  day        52111 non-null  int64  \n",
      "dtypes: float64(1), int64(5), object(6)\n",
      "memory usage: 4.8+ MB\n"
     ]
    }
   ],
   "source": [
    "reddit_dataset.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Comprobamos de forma visual el número de registros nulos de los atributos del dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(reddit_dataset.isnull(), cbar=False)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Podemos observar que la columna *body* tiene un gran número de registros nulos. Vamos a centrarnos en esta varaible apra identificar que esta sucediendo."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6</td>\n",
       "      <td>1.611863e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:37:41</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:32:10</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:28:57</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:26:56</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>WE BREAKING THROUGH</td>\n",
       "      <td>405</td>\n",
       "      <td>l6uf7d</td>\n",
       "      <td>https://i.redd.it/2wef8tc062e61.png</td>\n",
       "      <td>84</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:26:30</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52102</th>\n",
       "      <td>Pro moves</td>\n",
       "      <td>22537</td>\n",
       "      <td>ode6ey</td>\n",
       "      <td>https://i.redd.it/c39slsudv4971.jpg</td>\n",
       "      <td>352</td>\n",
       "      <td>1.625377e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-07-04 08:39:57</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>2021</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52103</th>\n",
       "      <td>Root Inc. (ROOT) Just Entered My Buy Zone. Int...</td>\n",
       "      <td>83</td>\n",
       "      <td>odcvds</td>\n",
       "      <td>https://i.redd.it/ufse5osed4971.png</td>\n",
       "      <td>130</td>\n",
       "      <td>1.625371e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-07-04 07:04:30</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>2021</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52104</th>\n",
       "      <td>$3.2k -&gt; $37.8k in 1 day on SPCE $45c FDs</td>\n",
       "      <td>1341</td>\n",
       "      <td>odc0nu</td>\n",
       "      <td>https://i.redd.it/yij40o9u34971.png</td>\n",
       "      <td>305</td>\n",
       "      <td>1.625368e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-07-04 06:06:08</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>2021</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52106</th>\n",
       "      <td>Everything I've learned about being on Wall St...</td>\n",
       "      <td>1011</td>\n",
       "      <td>od9xfn</td>\n",
       "      <td>https://v.redd.it/dfkjjyjae3971</td>\n",
       "      <td>87</td>\n",
       "      <td>1.625359e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-07-04 03:43:04</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>2021</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52108</th>\n",
       "      <td>$53k TO $306K in just 2 days.</td>\n",
       "      <td>1190</td>\n",
       "      <td>od7008</td>\n",
       "      <td>https://i.redd.it/k0pkc2m4i2971.png</td>\n",
       "      <td>237</td>\n",
       "      <td>1.625349e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-07-04 00:42:06</td>\n",
       "      <td>2021-07-04</td>\n",
       "      <td>2021</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>27875 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   title  score      id  \\\n",
       "0      It's not about the money, it's about sending a...     55  l6ulcx   \n",
       "1      Math Professor Scott Steiner says the numbers ...    110  l6uibd   \n",
       "3      NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...     29  l6ugk6   \n",
       "4      Not to distract from GME, just thought our AMC...     71  l6ufgy   \n",
       "5                                    WE BREAKING THROUGH    405  l6uf7d   \n",
       "...                                                  ...    ...     ...   \n",
       "52102                                          Pro moves  22537  ode6ey   \n",
       "52103  Root Inc. (ROOT) Just Entered My Buy Zone. Int...     83  odcvds   \n",
       "52104          $3.2k -> $37.8k in 1 day on SPCE $45c FDs   1341  odc0nu   \n",
       "52106  Everything I've learned about being on Wall St...   1011  od9xfn   \n",
       "52108                      $53k TO $306K in just 2 days.   1190  od7008   \n",
       "\n",
       "                                                     url  comms_num  \\\n",
       "0                        https://v.redd.it/6j75regs72e61          6   \n",
       "1                        https://v.redd.it/ah50lyny62e61         23   \n",
       "3      https://sec.report/Document/0001193125-21-019848/         74   \n",
       "4                    https://i.redd.it/4h2sukb662e61.jpg        156   \n",
       "5                    https://i.redd.it/2wef8tc062e61.png         84   \n",
       "...                                                  ...        ...   \n",
       "52102                https://i.redd.it/c39slsudv4971.jpg        352   \n",
       "52103                https://i.redd.it/ufse5osed4971.png        130   \n",
       "52104                https://i.redd.it/yij40o9u34971.png        305   \n",
       "52106                    https://v.redd.it/dfkjjyjae3971         87   \n",
       "52108                https://i.redd.it/k0pkc2m4i2971.png        237   \n",
       "\n",
       "            created body            timestamp        date  year  month  day  \n",
       "0      1.611863e+09  NaN  2021-01-28 21:37:41  2021-01-28  2021      1   28  \n",
       "1      1.611862e+09  NaN  2021-01-28 21:32:10  2021-01-28  2021      1   28  \n",
       "3      1.611862e+09  NaN  2021-01-28 21:28:57  2021-01-28  2021      1   28  \n",
       "4      1.611862e+09  NaN  2021-01-28 21:26:56  2021-01-28  2021      1   28  \n",
       "5      1.611862e+09  NaN  2021-01-28 21:26:30  2021-01-28  2021      1   28  \n",
       "...             ...  ...                  ...         ...   ...    ...  ...  \n",
       "52102  1.625377e+09  NaN  2021-07-04 08:39:57  2021-07-04  2021      7    4  \n",
       "52103  1.625371e+09  NaN  2021-07-04 07:04:30  2021-07-04  2021      7    4  \n",
       "52104  1.625368e+09  NaN  2021-07-04 06:06:08  2021-07-04  2021      7    4  \n",
       "52106  1.625359e+09  NaN  2021-07-04 03:43:04  2021-07-04  2021      7    4  \n",
       "52108  1.625349e+09  NaN  2021-07-04 00:42:06  2021-07-04  2021      7    4  \n",
       "\n",
       "[27875 rows x 12 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset[reddit_dataset['body'].isna()]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Seleccionamos una de las URL para ver si nos da más información."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 10,
     "metadata": {
      "image/png": {
       "width": 250
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "IPython.display.Image('https://i.redd.it/c39slsudv4971.jpg', width = 250)\n",
    "IPython.display.Image('https://i.redd.it/2wef8tc062e61.png', width = 250)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A parte de imágenes, las URL de los registros que tienen la variable *body* nula, contienen videos, documentos y otros archivos multimedia. Esa es la razón por la que el cuerpo del post es nulo. Cuando realicemos el análisis sentimental del cuerpo del post deberemos eliminar estos registros. Pero no los descartaremos cuando analicemos el sentimiento de los titulos de los posts."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A continuación vamos a extraer información descriptiva de los datos. Con el parámetro *include = 'all'* especificamos que queremos información de todos los atributos del dataset, incluso si no son numéricos."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>52111</td>\n",
       "      <td>52111.000000</td>\n",
       "      <td>52111</td>\n",
       "      <td>52111</td>\n",
       "      <td>52111.000000</td>\n",
       "      <td>5.211100e+04</td>\n",
       "      <td>24236</td>\n",
       "      <td>52111</td>\n",
       "      <td>52111</td>\n",
       "      <td>52111.000000</td>\n",
       "      <td>52111.000000</td>\n",
       "      <td>52111.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>50983</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52111</td>\n",
       "      <td>52096</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23702</td>\n",
       "      <td>42384</td>\n",
       "      <td>158</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>AMC</td>\n",
       "      <td>NaN</td>\n",
       "      <td>m496ec</td>\n",
       "      <td>https://magic.freetrade.io/join/jamie/13edb513</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Your daily trading discussion thread. Please k...</td>\n",
       "      <td>2021-01-29 01:03:59</td>\n",
       "      <td>2021-01-29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>40</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>74</td>\n",
       "      <td>14</td>\n",
       "      <td>15694</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1392.054825</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>258.724550</td>\n",
       "      <td>1.614303e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020.999981</td>\n",
       "      <td>2.296866</td>\n",
       "      <td>17.674694</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>8065.440508</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2540.474545</td>\n",
       "      <td>3.733101e+06</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.004381</td>\n",
       "      <td>1.534253</td>\n",
       "      <td>11.042699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.601340e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2020.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.611882e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>1.612479e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>19.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>205.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>1.615066e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>29.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>NaN</td>\n",
       "      <td>348241.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>93268.000000</td>\n",
       "      <td>1.626408e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        title          score      id  \\\n",
       "count   52111   52111.000000   52111   \n",
       "unique  50983            NaN   52111   \n",
       "top       AMC            NaN  m496ec   \n",
       "freq       40            NaN       1   \n",
       "mean      NaN    1392.054825     NaN   \n",
       "std       NaN    8065.440508     NaN   \n",
       "min       NaN       0.000000     NaN   \n",
       "25%       NaN       1.000000     NaN   \n",
       "50%       NaN      36.000000     NaN   \n",
       "75%       NaN     205.000000     NaN   \n",
       "max       NaN  348241.000000     NaN   \n",
       "\n",
       "                                                   url     comms_num  \\\n",
       "count                                            52111  52111.000000   \n",
       "unique                                           52096           NaN   \n",
       "top     https://magic.freetrade.io/join/jamie/13edb513           NaN   \n",
       "freq                                                11           NaN   \n",
       "mean                                               NaN    258.724550   \n",
       "std                                                NaN   2540.474545   \n",
       "min                                                NaN      0.000000   \n",
       "25%                                                NaN      3.000000   \n",
       "50%                                                NaN     17.000000   \n",
       "75%                                                NaN     58.000000   \n",
       "max                                                NaN  93268.000000   \n",
       "\n",
       "             created                                               body  \\\n",
       "count   5.211100e+04                                              24236   \n",
       "unique           NaN                                              23702   \n",
       "top              NaN  Your daily trading discussion thread. Please k...   \n",
       "freq             NaN                                                 74   \n",
       "mean    1.614303e+09                                                NaN   \n",
       "std     3.733101e+06                                                NaN   \n",
       "min     1.601340e+09                                                NaN   \n",
       "25%     1.611882e+09                                                NaN   \n",
       "50%     1.612479e+09                                                NaN   \n",
       "75%     1.615066e+09                                                NaN   \n",
       "max     1.626408e+09                                                NaN   \n",
       "\n",
       "                  timestamp        date          year         month  \\\n",
       "count                 52111       52111  52111.000000  52111.000000   \n",
       "unique                42384         158           NaN           NaN   \n",
       "top     2021-01-29 01:03:59  2021-01-29           NaN           NaN   \n",
       "freq                     14       15694           NaN           NaN   \n",
       "mean                    NaN         NaN   2020.999981      2.296866   \n",
       "std                     NaN         NaN      0.004381      1.534253   \n",
       "min                     NaN         NaN   2020.000000      1.000000   \n",
       "25%                     NaN         NaN   2021.000000      1.000000   \n",
       "50%                     NaN         NaN   2021.000000      2.000000   \n",
       "75%                     NaN         NaN   2021.000000      3.000000   \n",
       "max                     NaN         NaN   2021.000000      9.000000   \n",
       "\n",
       "                 day  \n",
       "count   52111.000000  \n",
       "unique           NaN  \n",
       "top              NaN  \n",
       "freq             NaN  \n",
       "mean       17.674694  \n",
       "std        11.042699  \n",
       "min         1.000000  \n",
       "25%         6.000000  \n",
       "50%        19.000000  \n",
       "75%        29.000000  \n",
       "max        31.000000  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset.describe(include='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6</td>\n",
       "      <td>1.611863e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:37:41</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:32:10</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>0</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>47</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading “to g...</td>\n",
       "      <td>2021-01-28 21:30:35</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:28:57</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:26:56</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title  score      id  \\\n",
       "0  It's not about the money, it's about sending a...     55  l6ulcx   \n",
       "1  Math Professor Scott Steiner says the numbers ...    110  l6uibd   \n",
       "2                                    Exit the system      0  l6uhhn   \n",
       "3  NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...     29  l6ugk6   \n",
       "4  Not to distract from GME, just thought our AMC...     71  l6ufgy   \n",
       "\n",
       "                                                 url  comms_num       created  \\\n",
       "0                    https://v.redd.it/6j75regs72e61          6  1.611863e+09   \n",
       "1                    https://v.redd.it/ah50lyny62e61         23  1.611862e+09   \n",
       "2  https://www.reddit.com/r/wallstreetbets/commen...         47  1.611862e+09   \n",
       "3  https://sec.report/Document/0001193125-21-019848/         74  1.611862e+09   \n",
       "4                https://i.redd.it/4h2sukb662e61.jpg        156  1.611862e+09   \n",
       "\n",
       "                                                body            timestamp  \\\n",
       "0                                                NaN  2021-01-28 21:37:41   \n",
       "1                                                NaN  2021-01-28 21:32:10   \n",
       "2  The CEO of NASDAQ pushed to halt trading “to g...  2021-01-28 21:30:35   \n",
       "3                                                NaN  2021-01-28 21:28:57   \n",
       "4                                                NaN  2021-01-28 21:26:56   \n",
       "\n",
       "         date  year  month  day  \n",
       "0  2021-01-28  2021      1   28  \n",
       "1  2021-01-28  2021      1   28  \n",
       "2  2021-01-28  2021      1   28  \n",
       "3  2021-01-28  2021      1   28  \n",
       "4  2021-01-28  2021      1   28  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Vamos a explorar cual es la cantidad de posts que se han realizado en función de la fecha."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "posts_fecha = reddit_dataset.groupby(['date']).size().reset_index(name='counts')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
    "\n",
    "sns.lineplot(data=posts_fecha, x='date', y='counts').set_title('Cantidad de posts en reddit por fecha')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Vamos a explorar la puntuación media recibida en los posts en función de la fecha."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-09-29</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>960.609023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-01-29</td>\n",
       "      <td>408.457309</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-01-30</td>\n",
       "      <td>4618.594101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-01-31</td>\n",
       "      <td>5230.513312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>153</th>\n",
       "      <td>2021-07-12</td>\n",
       "      <td>713.754717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>154</th>\n",
       "      <td>2021-07-13</td>\n",
       "      <td>779.956044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155</th>\n",
       "      <td>2021-07-14</td>\n",
       "      <td>1263.268293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>2021-07-15</td>\n",
       "      <td>725.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>2021-07-16</td>\n",
       "      <td>65.162791</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>158 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date        score\n",
       "0    2020-09-29     4.000000\n",
       "1    2021-01-28   960.609023\n",
       "2    2021-01-29   408.457309\n",
       "3    2021-01-30  4618.594101\n",
       "4    2021-01-31  5230.513312\n",
       "..          ...          ...\n",
       "153  2021-07-12   713.754717\n",
       "154  2021-07-13   779.956044\n",
       "155  2021-07-14  1263.268293\n",
       "156  2021-07-15   725.500000\n",
       "157  2021-07-16    65.162791\n",
       "\n",
       "[158 rows x 2 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#score_fecha = reddit_dataset.groupby(['date']).size().reset_index(name='counts')\n",
    "\n",
    "score_fecha = reddit_dataset[['score','date']].groupby(['date']).mean().reset_index()\n",
    "\n",
    "score_fecha"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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F77wBfGZz3ym5Lm44447xAknnCAmJyeFEEI8/PDD4rzzznNea/fff78444wzhBBCfPSjHxU33nijEEKIbdu2iWOPPVbccccdYmhoSBx33HHihRdeEEII8Z3vfEesWbPG+f4f+chHhBD2a+m6664rOQYhhFizZo24+eabhRD26/u4444Tw8PD4vbbbxfvfe97xfT0tPM9PvShDzk/x8997nOe38/92spms+Kss84STz31lBBCiImJCXHmmWeKxx9/vOzfpYceekgcccQR4oknnnBuv/DCC4UQQlx//fXizjvvFEIIkclkxDnnnCM2b97seRyEkLlBJ5oQEpi/+7u/w3ve8x488sgjeOSRR/C9730P3/ve93D77bfjwQcfxMknn4xly5YBAC666CIAwFe/+lWcddZZ6O3tBQBs3LgRX/rSl7Bz504AcBxbwM6nTk5OYsuWLQCAbDaLvr4+z2N54xvfiM7OTgDAwMAA3vzmNwMADjjgAIyNjQEAfve73+Gvf/0r/vZv/xYAYFkWkskkRkdH8dxzz+Fd73qXcwxekYU//OEPuOyyyxCJRADYueWPfexjJfd78MEHceWVV0JRFPT29uJv/uZvANiu4SOPPILx8XEndzszM4Nnn30WZ511lud5PfTQQzjppJOwatUqAMC6devQ29uLp556Cn/zN3+Dz372s/jLX/6CdevW4eqrr4aqlo64dHd3Y8OGDQCAU045BZqm4bnnnit7Ppqm4YwzzsD73vc+vOUtb8HJJ5+MU045peT7+nn8J554AkNDQwXPk6IoeO655wAARx55JJYuXQrAdnp/9atfeT4Phx9+uOP4//73v8f27dsLsuoTExMYGxvDli1b8NnPfhYAsHr1apx44okA7BjKmjVrcOihhwIA3vve9+JrX/ua52NV4gMf+AAAYO3atVizZg0eeeQR/OEPf8DGjRvR1tYGALjwwgvxne98B5lMBgBw/PHHV/2+27Ztw44dO3DllVc6t6VSKTzzzDNIp9Oef5cefvhhrFq1Csccc4xzTHfccQcA4PLLL8cf//hHfO9738O2bduwb9++gneNCCG1gyKaEBKIxx57DI8//jguvvhinHrqqTj11FPxj//4jzjnnHPwxz/+EZqmQVEU5/6pVAq7du2CZVkl30sIAcMwAMARIoAtcq+88kpHwE1PTyOdTnseTzQaLfhc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\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(data=score_fecha, x='date', y='score').set_title('Score medio de los posts en reddit por fecha')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Vamos a explorar si la longitud del titulo o del cuerpo de los posts tienen relación con la puntuación de estos."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6</td>\n",
       "      <td>1.611863e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:37:41</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28 21:32:10</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>0</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>47</td>\n",
       "      <td>1.611862e+09</td>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading “to g...</td>\n",
       "      <td>2021-01-28 21:30:35</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title  score      id  \\\n",
       "0  It's not about the money, it's about sending a...     55  l6ulcx   \n",
       "1  Math Professor Scott Steiner says the numbers ...    110  l6uibd   \n",
       "2                                    Exit the system      0  l6uhhn   \n",
       "\n",
       "                                                 url  comms_num       created  \\\n",
       "0                    https://v.redd.it/6j75regs72e61          6  1.611863e+09   \n",
       "1                    https://v.redd.it/ah50lyny62e61         23  1.611862e+09   \n",
       "2  https://www.reddit.com/r/wallstreetbets/commen...         47  1.611862e+09   \n",
       "\n",
       "                                                body            timestamp  \\\n",
       "0                                                NaN  2021-01-28 21:37:41   \n",
       "1                                                NaN  2021-01-28 21:32:10   \n",
       "2  The CEO of NASDAQ pushed to halt trading “to g...  2021-01-28 21:30:35   \n",
       "\n",
       "         date  year  month  day  \n",
       "0  2021-01-28  2021      1   28  \n",
       "1  2021-01-28  2021      1   28  \n",
       "2  2021-01-28  2021      1   28  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>score</th>\n",
       "      <th>title_len</th>\n",
       "      <th>body_len</th>\n",
       "      <th>comms_num</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>55</td>\n",
       "      <td>59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>1319.0</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>29</td>\n",
       "      <td>75</td>\n",
       "      <td>NaN</td>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>71</td>\n",
       "      <td>79</td>\n",
       "      <td>NaN</td>\n",
       "      <td>156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52106</th>\n",
       "      <td>1011</td>\n",
       "      <td>59</td>\n",
       "      <td>NaN</td>\n",
       "      <td>87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52107</th>\n",
       "      <td>510</td>\n",
       "      <td>54</td>\n",
       "      <td>2169.0</td>\n",
       "      <td>288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52108</th>\n",
       "      <td>1190</td>\n",
       "      <td>29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52109</th>\n",
       "      <td>74</td>\n",
       "      <td>44</td>\n",
       "      <td>994.0</td>\n",
       "      <td>194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52110</th>\n",
       "      <td>19</td>\n",
       "      <td>60</td>\n",
       "      <td>1010.0</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>52111 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       score  title_len  body_len  comms_num\n",
       "0         55         59       NaN          6\n",
       "1        110         80       NaN         23\n",
       "2          0         15    1319.0         47\n",
       "3         29         75       NaN         74\n",
       "4         71         79       NaN        156\n",
       "...      ...        ...       ...        ...\n",
       "52106   1011         59       NaN         87\n",
       "52107    510         54    2169.0        288\n",
       "52108   1190         29       NaN        237\n",
       "52109     74         44     994.0        194\n",
       "52110     19         60    1010.0         64\n",
       "\n",
       "[52111 rows x 4 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "score_length=pd.DataFrame()\n",
    "score_length['score'] = reddit_dataset['score']\n",
    "score_length['title_len'] = pd.DataFrame(reddit_dataset['title'].str.len())\n",
    "\n",
    "score_length['body_len'] = pd.DataFrame(reddit_dataset['body'].str.len())\n",
    "score_length['comms_num'] = reddit_dataset['comms_num']\n",
    "\n",
    "score_length"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Reemplazamos los registros con valor *nan* en la columna *body_len* por 0."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>score</th>\n",
       "      <th>title_len</th>\n",
       "      <th>body_len</th>\n",
       "      <th>comms_num</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>55</td>\n",
       "      <td>59</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>1319.0</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>29</td>\n",
       "      <td>75</td>\n",
       "      <td>0.0</td>\n",
       "      <td>74</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>71</td>\n",
       "      <td>79</td>\n",
       "      <td>0.0</td>\n",
       "      <td>156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52106</th>\n",
       "      <td>1011</td>\n",
       "      <td>59</td>\n",
       "      <td>0.0</td>\n",
       "      <td>87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52107</th>\n",
       "      <td>510</td>\n",
       "      <td>54</td>\n",
       "      <td>2169.0</td>\n",
       "      <td>288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52108</th>\n",
       "      <td>1190</td>\n",
       "      <td>29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52109</th>\n",
       "      <td>74</td>\n",
       "      <td>44</td>\n",
       "      <td>994.0</td>\n",
       "      <td>194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52110</th>\n",
       "      <td>19</td>\n",
       "      <td>60</td>\n",
       "      <td>1010.0</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>52111 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       score  title_len  body_len  comms_num\n",
       "0         55         59       0.0          6\n",
       "1        110         80       0.0         23\n",
       "2          0         15    1319.0         47\n",
       "3         29         75       0.0         74\n",
       "4         71         79       0.0        156\n",
       "...      ...        ...       ...        ...\n",
       "52106   1011         59       0.0         87\n",
       "52107    510         54    2169.0        288\n",
       "52108   1190         29       0.0        237\n",
       "52109     74         44     994.0        194\n",
       "52110     19         60    1010.0         64\n",
       "\n",
       "[52111 rows x 4 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "score_length.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=score_length, x='title_len', y='score').set_title('Longitud del titulo vs puntuación del post')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=score_length, x='body_len', y='score').set_title('Longitud del cuerpo del post vs puntuación del post')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Con el mismo dataset que hemos generado vamos a explorar si la puntuación del post tiene relación con el número de comentarios. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=score_length, x='comms_num', y='score').set_title('Número de comentarios vs puntuación del post')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "También vamos a estudiar la distribución de comentarios de los posts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\hocana\\Anaconda3\\envs\\Env\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(score_length['comms_num'])\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "También vamos a estudiar la distribución de las puntuaciones de los posts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\hocana\\Anaconda3\\envs\\Env\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(score_length['score'])\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.2. EDA precio GME <a class=\"anchor\" id=\"section_4_2\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>week_day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>08/20/2021</td>\n",
       "      <td>159.30</td>\n",
       "      <td>1154858</td>\n",
       "      <td>153.80</td>\n",
       "      <td>160.0900</td>\n",
       "      <td>153.2400</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>08/19/2021</td>\n",
       "      <td>152.90</td>\n",
       "      <td>1196548</td>\n",
       "      <td>156.77</td>\n",
       "      <td>157.9899</td>\n",
       "      <td>150.7800</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>08/18/2021</td>\n",
       "      <td>157.05</td>\n",
       "      <td>1411842</td>\n",
       "      <td>163.25</td>\n",
       "      <td>165.6000</td>\n",
       "      <td>156.7500</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>08/17/2021</td>\n",
       "      <td>163.55</td>\n",
       "      <td>1215938</td>\n",
       "      <td>161.19</td>\n",
       "      <td>169.4800</td>\n",
       "      <td>161.1000</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>08/16/2021</td>\n",
       "      <td>163.93</td>\n",
       "      <td>1574877</td>\n",
       "      <td>161.00</td>\n",
       "      <td>169.8799</td>\n",
       "      <td>159.1601</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date   Close   Volume    Open      High       Low   week_day\n",
       "0  08/20/2021  159.30  1154858  153.80  160.0900  153.2400     Friday\n",
       "1  08/19/2021  152.90  1196548  156.77  157.9899  150.7800   Thursday\n",
       "2  08/18/2021  157.05  1411842  163.25  165.6000  156.7500  Wednesday\n",
       "3  08/17/2021  163.55  1215938  161.19  169.4800  161.1000    Tuesday\n",
       "4  08/16/2021  163.93  1574877  161.00  169.8799  159.1601     Monday"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gme_dataset.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 252 entries, 0 to 251\n",
      "Data columns (total 7 columns):\n",
      " #   Column    Non-Null Count  Dtype  \n",
      "---  ------    --------------  -----  \n",
      " 0   Date      252 non-null    object \n",
      " 1   Close     252 non-null    float64\n",
      " 2   Volume    252 non-null    int64  \n",
      " 3   Open      252 non-null    float64\n",
      " 4   High      252 non-null    float64\n",
      " 5   Low       252 non-null    float64\n",
      " 6   week_day  252 non-null    object \n",
      "dtypes: float64(4), int64(1), object(2)\n",
      "memory usage: 13.9+ KB\n"
     ]
    }
   ],
   "source": [
    "gme_dataset.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Vamos a convertir el tipo de datos de la columna *date* a tipo *datetime*, esto nos facilitará tratar con este campo posteriormente."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "gme_dataset['Date'] = pd.to_datetime(gme_dataset['Date'], format='%m/%d/%Y')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(gme_dataset.isnull(), cbar=False)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Podemos observar que el dataset no contiene valores nulos."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Vamos a detallar más la información de cada una de las variables para hacernos una mejor idea de estas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\hocana\\AppData\\Local\\Temp/ipykernel_9936/1064862866.py:1: FutureWarning: Treating datetime data as categorical rather than numeric in `.describe` is deprecated and will be removed in a future version of pandas. Specify `datetime_is_numeric=True` to silence this warning and adopt the future behavior now.\n",
      "  gme_dataset.describe(include='all')\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>week_day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>252</td>\n",
       "      <td>252.000000</td>\n",
       "      <td>2.520000e+02</td>\n",
       "      <td>252.000000</td>\n",
       "      <td>252.000000</td>\n",
       "      <td>252.000000</td>\n",
       "      <td>252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>252</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>2021-03-03 00:00:00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>first</th>\n",
       "      <td>2020-08-21 00:00:00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>last</th>\n",
       "      <td>2021-08-20 00:00:00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>NaN</td>\n",
       "      <td>105.981032</td>\n",
       "      <td>1.765364e+07</td>\n",
       "      <td>107.189393</td>\n",
       "      <td>115.542853</td>\n",
       "      <td>98.646604</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>NaN</td>\n",
       "      <td>89.901321</td>\n",
       "      <td>2.841126e+07</td>\n",
       "      <td>92.004999</td>\n",
       "      <td>100.110119</td>\n",
       "      <td>83.534723</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>NaN</td>\n",
       "      <td>4.870000</td>\n",
       "      <td>9.454280e+05</td>\n",
       "      <td>4.600000</td>\n",
       "      <td>5.130000</td>\n",
       "      <td>4.560000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>13.790000</td>\n",
       "      <td>4.344478e+06</td>\n",
       "      <td>13.682500</td>\n",
       "      <td>14.293750</td>\n",
       "      <td>13.072500</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>119.260000</td>\n",
       "      <td>7.870080e+06</td>\n",
       "      <td>119.985000</td>\n",
       "      <td>146.623500</td>\n",
       "      <td>100.485000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>NaN</td>\n",
       "      <td>180.135000</td>\n",
       "      <td>1.627957e+07</td>\n",
       "      <td>179.962500</td>\n",
       "      <td>187.547500</td>\n",
       "      <td>171.062500</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>NaN</td>\n",
       "      <td>347.510000</td>\n",
       "      <td>1.971579e+08</td>\n",
       "      <td>379.710000</td>\n",
       "      <td>483.000000</td>\n",
       "      <td>291.510000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Date       Close        Volume        Open        High  \\\n",
       "count                   252  252.000000  2.520000e+02  252.000000  252.000000   \n",
       "unique                  252         NaN           NaN         NaN         NaN   \n",
       "top     2021-03-03 00:00:00         NaN           NaN         NaN         NaN   \n",
       "freq                      1         NaN           NaN         NaN         NaN   \n",
       "first   2020-08-21 00:00:00         NaN           NaN         NaN         NaN   \n",
       "last    2021-08-20 00:00:00         NaN           NaN         NaN         NaN   \n",
       "mean                    NaN  105.981032  1.765364e+07  107.189393  115.542853   \n",
       "std                     NaN   89.901321  2.841126e+07   92.004999  100.110119   \n",
       "min                     NaN    4.870000  9.454280e+05    4.600000    5.130000   \n",
       "25%                     NaN   13.790000  4.344478e+06   13.682500   14.293750   \n",
       "50%                     NaN  119.260000  7.870080e+06  119.985000  146.623500   \n",
       "75%                     NaN  180.135000  1.627957e+07  179.962500  187.547500   \n",
       "max                     NaN  347.510000  1.971579e+08  379.710000  483.000000   \n",
       "\n",
       "               Low   week_day  \n",
       "count   252.000000        252  \n",
       "unique         NaN          5  \n",
       "top            NaN  Wednesday  \n",
       "freq           NaN         52  \n",
       "first          NaN        NaN  \n",
       "last           NaN        NaN  \n",
       "mean     98.646604        NaN  \n",
       "std      83.534723        NaN  \n",
       "min       4.560000        NaN  \n",
       "25%      13.072500        NaN  \n",
       "50%     100.485000        NaN  \n",
       "75%     171.062500        NaN  \n",
       "max     291.510000        NaN  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gme_dataset.describe(include='all')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Vamos a explorar los precios de apertura en función de la fecha."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 842.4x595.44 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(data=gme_dataset, x='Date', y='Open').set_title('Precio de apertura por fecha')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Pero el precio de apertura únicamente no nos aporta mucho valor. En economía se suele utilizar muy comunmente un tipo de gráficos llamado *velas japonesas*, que permiten representar en un formato muy compacto el precio de apertura de la acción, el precio de cierre, el precio máximo que ha alcanzado la acción y el precio mínimo. De esta manera maximizamos el valor que el gráfico nos puede ofrecer, incluso representando si la acción ha tenido un precio de cierre inferior o superior al precio de apertura mediante colores. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x575 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "gme_dataset_candles = gme_dataset.copy()\n",
    "gme_dataset_candles = gme_dataset_candles.set_index('Date')\n",
    "\n",
    "mpf.plot(data = gme_dataset_candles,\n",
    "         type = 'candle',\n",
    "         style = 'yahoo',\n",
    "         title = 'Velas japonesas GME'\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "El orden de los registros es inverso al tiempo por lo que debemos cambiar el orden de todos los registros del dataset. LEl primer registro será el último y el último registro sera el primero."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>week_day</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-08-21</th>\n",
       "      <td>5.03</td>\n",
       "      <td>10642590</td>\n",
       "      <td>4.60</td>\n",
       "      <td>5.6000</td>\n",
       "      <td>4.5950</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-08-24</th>\n",
       "      <td>4.87</td>\n",
       "      <td>4585366</td>\n",
       "      <td>5.10</td>\n",
       "      <td>5.1300</td>\n",
       "      <td>4.5600</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-08-25</th>\n",
       "      <td>4.98</td>\n",
       "      <td>2998678</td>\n",
       "      <td>4.88</td>\n",
       "      <td>5.2500</td>\n",
       "      <td>4.8800</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-08-26</th>\n",
       "      <td>5.11</td>\n",
       "      <td>2779664</td>\n",
       "      <td>4.97</td>\n",
       "      <td>5.2200</td>\n",
       "      <td>4.9199</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-08-27</th>\n",
       "      <td>5.25</td>\n",
       "      <td>3384658</td>\n",
       "      <td>5.11</td>\n",
       "      <td>5.3799</td>\n",
       "      <td>5.0200</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-16</th>\n",
       "      <td>163.93</td>\n",
       "      <td>1574877</td>\n",
       "      <td>161.00</td>\n",
       "      <td>169.8799</td>\n",
       "      <td>159.1601</td>\n",
       "      <td>Monday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-17</th>\n",
       "      <td>163.55</td>\n",
       "      <td>1215938</td>\n",
       "      <td>161.19</td>\n",
       "      <td>169.4800</td>\n",
       "      <td>161.1000</td>\n",
       "      <td>Tuesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-18</th>\n",
       "      <td>157.05</td>\n",
       "      <td>1411842</td>\n",
       "      <td>163.25</td>\n",
       "      <td>165.6000</td>\n",
       "      <td>156.7500</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-19</th>\n",
       "      <td>152.90</td>\n",
       "      <td>1196548</td>\n",
       "      <td>156.77</td>\n",
       "      <td>157.9899</td>\n",
       "      <td>150.7800</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-20</th>\n",
       "      <td>159.30</td>\n",
       "      <td>1154858</td>\n",
       "      <td>153.80</td>\n",
       "      <td>160.0900</td>\n",
       "      <td>153.2400</td>\n",
       "      <td>Friday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>252 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Close    Volume    Open      High       Low   week_day\n",
       "Date                                                               \n",
       "2020-08-21    5.03  10642590    4.60    5.6000    4.5950     Friday\n",
       "2020-08-24    4.87   4585366    5.10    5.1300    4.5600     Monday\n",
       "2020-08-25    4.98   2998678    4.88    5.2500    4.8800    Tuesday\n",
       "2020-08-26    5.11   2779664    4.97    5.2200    4.9199  Wednesday\n",
       "2020-08-27    5.25   3384658    5.11    5.3799    5.0200   Thursday\n",
       "...            ...       ...     ...       ...       ...        ...\n",
       "2021-08-16  163.93   1574877  161.00  169.8799  159.1601     Monday\n",
       "2021-08-17  163.55   1215938  161.19  169.4800  161.1000    Tuesday\n",
       "2021-08-18  157.05   1411842  163.25  165.6000  156.7500  Wednesday\n",
       "2021-08-19  152.90   1196548  156.77  157.9899  150.7800   Thursday\n",
       "2021-08-20  159.30   1154858  153.80  160.0900  153.2400     Friday\n",
       "\n",
       "[252 rows x 6 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "gme_dataset_candles = gme_dataset_candles.iloc[::-1]\n",
    "\n",
    "gme_dataset_candles"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Volvemos a generar el gráfico de velas japonesas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x575 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "mpf.plot(data = gme_dataset_candles,\n",
    "         type = 'candle',\n",
    "         style = 'yahoo',\n",
    "         title = 'Velas japonesas GME'\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. Análisis sentimientos <a class=\"anchor\" id=\"cap5\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Se puede apreciar que si bien el precio no crece de manera constante a lo largo del tiempo, si se se muestra un aumento en el\n",
    "#precio de apertura a lo largo del tiempo."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.1. Clasificación sentimientos títulos <a class=\"anchor\" id=\"section_5_1\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5.1.1. Modelo BERT <a class=\"anchor\" id=\"section_5_1_1\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c48c3a2921714067924bfd3e01aee9ef",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Downloading:   0%|          | 0.00/39.0 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "28be866aa1864b8e95ac4a1b35fdcbbf",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Downloading:   0%|          | 0.00/953 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "daeae7c57cc440cbb07e7f4f426e5cba",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Downloading:   0%|          | 0.00/872k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fbab27f20c234a57a3128b5e686900a5",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Downloading:   0%|          | 0.00/112 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "40c67268e42d484ca4fbfd42b47b5eba",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Downloading:   0%|          | 0.00/669M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "tokenizer = AutoTokenizer.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')\n",
    "model_BERT = AutoModelForSequenceClassification.from_pretrained('nlptown/bert-base-multilingual-uncased-sentiment')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Vamos a analizar un título individualmente. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Math Professor Scott Steiner says the numbers spell DISASTER for Gamestop shorts'"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset['title'].iloc[1]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "El primer paso es tokenizar el texto que queramos analizar. El codificador nos devuelve una lista de la codificación del texto que le pasamos por parámetro."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tensor([  101, 33508, 12156, 13064, 39241, 20782, 10103, 18627, 55759, 41055,\n",
       "        10139, 12052, 33876, 12972, 10107,   102])"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tokens = tokenizer.encode_plus(\n",
    "    reddit_dataset['title'].iloc[1],\n",
    "    add_special_tokens = True,\n",
    "    return_tensors = 'pt'\n",
    ")\n",
    "\n",
    "tokens['input_ids'][0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Con el texto codificado podemos alimentar el modelo. El modelo nos devuelve otra lista, logits, con 5 valores que representan la probabilidad de que el texto que estamos analizando tenga un sentimiento negativo - negativo/neutro - neutro - positivo/neutro - positivo, respectivamente. El valor máximo de la la lista nos indicará cual es el sentimiento predominante del texto analizado."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SequenceClassifierOutput(loss=None, logits=tensor([[ 0.8411,  0.8529,  0.3576, -0.5118, -1.3356]],\n",
       "       grad_fn=<AddmmBackward>), hidden_states=None, attentions=None)"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result = model_BERT(tokens['input_ids'])\n",
    "\n",
    "result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "En el ejemplo podemos ver que para el texto analizado el modelo nos devuelve un sentimiento predominante negativo/neutro."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Para poder extraer el sentimiento predominante de todos los títulos vamos a crear una función que ejecutaremos para cada registro del dataset. La función realizará cada unos de los pasos anteriormente explicados."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "def BERT_sentiment_score(texto):\n",
    "        tokens = tokenizer.encode_plus(texto,add_special_tokens = True,return_tensors = 'pt')\n",
    "        result = model_BERT(tokens['input_ids'])\n",
    "        return int(torch.argmax(result.logits))+1 #De los 5 resultados ,que representan las probabilidades del sentimiento del texto, que nos devuelve el modelo nos quedamos con el max"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Aplicamos la función para calcular el sentimiento de los títulos con el modelo BERT y lo almacenamos en una nueva variable en el dataset. Para facilitar el desarrollo, y no calcular constantemente el sentimiento de los títulos, una vez generado el sentimiento de los títulos se ha exportado a csv el dataset. Si el csv no se encuentra disponible, sería el caso de una ejecución inicial, se calcularía el sentimiento de los títulos del dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>BERT_score_title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.611863e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:37</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:32</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>0</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading “to g...</td>\n",
       "      <td>28/01/2021 21:30</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:28</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:26</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52135</th>\n",
       "      <td>Everything I've learned about being on Wall St...</td>\n",
       "      <td>1011</td>\n",
       "      <td>od9xfn</td>\n",
       "      <td>https://v.redd.it/dfkjjyjae3971</td>\n",
       "      <td>87.0</td>\n",
       "      <td>1.625359e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 3:43</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52136</th>\n",
       "      <td>I Accidentally YOLOed Half My Portfolio After ...</td>\n",
       "      <td>510</td>\n",
       "      <td>od97ek</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>288.0</td>\n",
       "      <td>1.625357e+10</td>\n",
       "      <td>tl;dr at bottom\\n\\nSo after using DD from [u/C...</td>\n",
       "      <td>04/07/2021 2:55</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52137</th>\n",
       "      <td>$53k TO $306K in just 2 days.</td>\n",
       "      <td>1190</td>\n",
       "      <td>od7008</td>\n",
       "      <td>https://i.redd.it/k0pkc2m4i2971.png</td>\n",
       "      <td>237.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 0:42</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52138</th>\n",
       "      <td>Average Annual Return on Investments for WSB</td>\n",
       "      <td>74</td>\n",
       "      <td>od77kx</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>194.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>I was having a discussion with my friends abou...</td>\n",
       "      <td>04/07/2021 0:54</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52139</th>\n",
       "      <td>Genuine question about hypothetical stock shor...</td>\n",
       "      <td>19</td>\n",
       "      <td>od75w3</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>64.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>So I want to start this off by saying you prob...</td>\n",
       "      <td>04/07/2021 0:51</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>52140 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   title score      id  \\\n",
       "0      It's not about the money, it's about sending a...    55  l6ulcx   \n",
       "1      Math Professor Scott Steiner says the numbers ...   110  l6uibd   \n",
       "2                                        Exit the system     0  l6uhhn   \n",
       "3      NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...    29  l6ugk6   \n",
       "4      Not to distract from GME, just thought our AMC...    71  l6ufgy   \n",
       "...                                                  ...   ...     ...   \n",
       "52135  Everything I've learned about being on Wall St...  1011  od9xfn   \n",
       "52136  I Accidentally YOLOed Half My Portfolio After ...   510  od97ek   \n",
       "52137                      $53k TO $306K in just 2 days.  1190  od7008   \n",
       "52138       Average Annual Return on Investments for WSB    74  od77kx   \n",
       "52139  Genuine question about hypothetical stock shor...    19  od75w3   \n",
       "\n",
       "                                                     url  comms_num  \\\n",
       "0                        https://v.redd.it/6j75regs72e61        6.0   \n",
       "1                        https://v.redd.it/ah50lyny62e61       23.0   \n",
       "2      https://www.reddit.com/r/wallstreetbets/commen...       47.0   \n",
       "3      https://sec.report/Document/0001193125-21-019848/       74.0   \n",
       "4                    https://i.redd.it/4h2sukb662e61.jpg      156.0   \n",
       "...                                                  ...        ...   \n",
       "52135                    https://v.redd.it/dfkjjyjae3971       87.0   \n",
       "52136  https://www.reddit.com/r/wallstreetbets/commen...      288.0   \n",
       "52137                https://i.redd.it/k0pkc2m4i2971.png      237.0   \n",
       "52138  https://www.reddit.com/r/wallstreetbets/commen...      194.0   \n",
       "52139  https://www.reddit.com/r/wallstreetbets/commen...       64.0   \n",
       "\n",
       "            created                                               body  \\\n",
       "0      1.611863e+10                                                NaN   \n",
       "1      1.611862e+10                                                NaN   \n",
       "2      1.611862e+10  The CEO of NASDAQ pushed to halt trading “to g...   \n",
       "3      1.611862e+10                                                NaN   \n",
       "4      1.611862e+10                                                NaN   \n",
       "...             ...                                                ...   \n",
       "52135  1.625359e+10                                                NaN   \n",
       "52136  1.625357e+10  tl;dr at bottom\\n\\nSo after using DD from [u/C...   \n",
       "52137  1.625349e+10                                                NaN   \n",
       "52138  1.625349e+10  I was having a discussion with my friends abou...   \n",
       "52139  1.625349e+10  So I want to start this off by saying you prob...   \n",
       "\n",
       "              timestamp        date    year  month   day  BERT_score_title  \n",
       "0      28/01/2021 21:37  28/01/2021  2021.0    1.0  28.0               1.0  \n",
       "1      28/01/2021 21:32  28/01/2021  2021.0    1.0  28.0               2.0  \n",
       "2      28/01/2021 21:30  28/01/2021  2021.0    1.0  28.0               1.0  \n",
       "3      28/01/2021 21:28  28/01/2021  2021.0    1.0  28.0               5.0  \n",
       "4      28/01/2021 21:26  28/01/2021  2021.0    1.0  28.0               3.0  \n",
       "...                 ...         ...     ...    ...   ...               ...  \n",
       "52135   04/07/2021 3:43  04/07/2021  2021.0    7.0   4.0               5.0  \n",
       "52136   04/07/2021 2:55  04/07/2021  2021.0    7.0   4.0               1.0  \n",
       "52137   04/07/2021 0:42  04/07/2021  2021.0    7.0   4.0               1.0  \n",
       "52138   04/07/2021 0:54  04/07/2021  2021.0    7.0   4.0               3.0  \n",
       "52139   04/07/2021 0:51  04/07/2021  2021.0    7.0   4.0               4.0  \n",
       "\n",
       "[52140 rows x 13 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "if os.path.isfile('reddit_dataset_BERT_score_title.csv'):\n",
    "    reddit_dataset = pd.read_csv('reddit_dataset_BERT_score_title.csv', sep=';')\n",
    "else:\n",
    "    reddit_dataset['BERT_score_title'] = reddit_dataset['title'].apply(lambda x: BERT_sentiment_score(x[:512]))\n",
    "    reddit_dataset.to_csv(path_or_buf = './reddit_dataset_BERT_score_title.csv', index=False) # Guardamos el estado actual del dataset en formato CVS para no tener qu replicarlo en cada ejecucion\n",
    "    \n",
    "reddit_dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5.1.2. Librería NLTK <a class=\"anchor\" id=\"section_5_1_2\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "ename": "LookupError",
     "evalue": "\n**********************************************************************\n  Resource \u001b[93mvader_lexicon\u001b[0m not found.\n  Please use the NLTK Downloader to obtain the resource:\n\n  \u001b[31m>>> import nltk\n  >>> nltk.download('vader_lexicon')\n  \u001b[0m\n  For more information see: https://www.nltk.org/data.html\n\n  Attempted to load \u001b[93msentiment/vader_lexicon.zip/vader_lexicon/vader_lexicon.txt\u001b[0m\n\n  Searched in:\n    - 'C:\\\\Users\\\\hocana/nltk_data'\n    - 'C:\\\\Users\\\\hocana\\\\Anaconda3\\\\envs\\\\Env\\\\nltk_data'\n    - 'C:\\\\Users\\\\hocana\\\\Anaconda3\\\\envs\\\\Env\\\\share\\\\nltk_data'\n    - 'C:\\\\Users\\\\hocana\\\\Anaconda3\\\\envs\\\\Env\\\\lib\\\\nltk_data'\n    - 'C:\\\\Users\\\\hocana\\\\AppData\\\\Roaming\\\\nltk_data'\n    - 'C:\\\\nltk_data'\n    - 'D:\\\\nltk_data'\n    - 'E:\\\\nltk_data'\n    - ''\n**********************************************************************\n",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mLookupError\u001b[0m                               Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_9936/3904603195.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0msid\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mSIA\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      2\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[0mtest_nltk_title\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mreddit_dataset\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'title'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'id'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[0mtest_nltk_title\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'title'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtest_nltk_title\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mstr\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\envs\\Env\\lib\\site-packages\\nltk\\sentiment\\vader.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, lexicon_file)\u001b[0m\n\u001b[0;32m    337\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mlexicon_file\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m\"sentiment/vader_lexicon.zip/vader_lexicon/vader_lexicon.txt\"\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    338\u001b[0m     ):\n\u001b[1;32m--> 339\u001b[1;33m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mlexicon_file\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnltk\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mload\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlexicon_file\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    340\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mlexicon\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmake_lex_dict\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    341\u001b[0m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mconstants\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mVaderConstants\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\envs\\Env\\lib\\site-packages\\nltk\\data.py\u001b[0m in \u001b[0;36mload\u001b[1;34m(resource_url, format, cache, verbose, logic_parser, fstruct_reader, encoding)\u001b[0m\n\u001b[0;32m    748\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    749\u001b[0m     \u001b[1;31m# Load the resource.\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 750\u001b[1;33m     \u001b[0mopened_resource\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0m_open\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mresource_url\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    751\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    752\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0mformat\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;34m\"raw\"\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\envs\\Env\\lib\\site-packages\\nltk\\data.py\u001b[0m in \u001b[0;36m_open\u001b[1;34m(resource_url)\u001b[0m\n\u001b[0;32m    873\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    874\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0mprotocol\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mNone\u001b[0m \u001b[1;32mor\u001b[0m \u001b[0mprotocol\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mlower\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;34m\"nltk\"\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 875\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0mfind\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mpath_\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mpath\u001b[0m \u001b[1;33m+\u001b[0m \u001b[1;33m[\u001b[0m\u001b[1;34m\"\"\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mopen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    876\u001b[0m     \u001b[1;32melif\u001b[0m \u001b[0mprotocol\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mlower\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;34m\"file\"\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    877\u001b[0m         \u001b[1;31m# urllib might not use mode='rb', so handle this one ourselves:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\envs\\Env\\lib\\site-packages\\nltk\\data.py\u001b[0m in \u001b[0;36mfind\u001b[1;34m(resource_name, paths)\u001b[0m\n\u001b[0;32m    581\u001b[0m     \u001b[0msep\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m\"*\"\u001b[0m \u001b[1;33m*\u001b[0m \u001b[1;36m70\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    582\u001b[0m     \u001b[0mresource_not_found\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m\"\\n%s\\n%s\\n%s\\n\"\u001b[0m \u001b[1;33m%\u001b[0m \u001b[1;33m(\u001b[0m\u001b[0msep\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmsg\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0msep\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 583\u001b[1;33m     \u001b[1;32mraise\u001b[0m \u001b[0mLookupError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mresource_not_found\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    584\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    585\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mLookupError\u001b[0m: \n**********************************************************************\n  Resource \u001b[93mvader_lexicon\u001b[0m not found.\n  Please use the NLTK Downloader to obtain the resource:\n\n  \u001b[31m>>> import nltk\n  >>> nltk.download('vader_lexicon')\n  \u001b[0m\n  For more information see: https://www.nltk.org/data.html\n\n  Attempted to load \u001b[93msentiment/vader_lexicon.zip/vader_lexicon/vader_lexicon.txt\u001b[0m\n\n  Searched in:\n    - 'C:\\\\Users\\\\hocana/nltk_data'\n    - 'C:\\\\Users\\\\hocana\\\\Anaconda3\\\\envs\\\\Env\\\\nltk_data'\n    - 'C:\\\\Users\\\\hocana\\\\Anaconda3\\\\envs\\\\Env\\\\share\\\\nltk_data'\n    - 'C:\\\\Users\\\\hocana\\\\Anaconda3\\\\envs\\\\Env\\\\lib\\\\nltk_data'\n    - 'C:\\\\Users\\\\hocana\\\\AppData\\\\Roaming\\\\nltk_data'\n    - 'C:\\\\nltk_data'\n    - 'D:\\\\nltk_data'\n    - 'E:\\\\nltk_data'\n    - ''\n**********************************************************************\n"
     ]
    }
   ],
   "source": [
    "sid = SIA()\n",
    "\n",
    "test_nltk_title = reddit_dataset[['title', 'id']].copy()\n",
    "\n",
    "test_nltk_title['title'] = test_nltk_title.title.astype(str)\n",
    "\n",
    "#test_nltk_title['sentiments']           = test_nltk_title['title'].apply(lambda x: sid.polarity_scores(' '.join(re.findall(r'\\w+',x.lower()))))\n",
    "#test_nltk_title['Positive Sentiment']   = test_nltk_title['sentiments'].apply(lambda x: x['pos']+1*(10**-6)) \n",
    "#test_nltk_title['Neutral Sentiment']    = test_nltk_title['sentiments'].apply(lambda x: x['neu']+1*(10**-6))\n",
    "#test_nltk_title['Negative Sentiment']   = test_nltk_title['sentiments'].apply(lambda x: x['neg']+1*(10**-6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Remove handlers\n",
    "test_nltk_title.title = test_nltk_title.title.apply(lambda x:re.sub('@[^\\s]+','',x))\n",
    "\n",
    "# Remove URLS\n",
    "test_nltk_title.title = test_nltk_title.title.apply(lambda x:re.sub(r\"http\\S+\", \"\", x))\n",
    "\n",
    "# Remove all the special characters\n",
    "test_nltk_title.title = test_nltk_title.title.apply(lambda x:' '.join(re.findall(r'\\w+', x)))\n",
    "\n",
    "#remove all single characters\n",
    "test_nltk_title.title = test_nltk_title.title.apply(lambda x:re.sub(r'\\s+[a-zA-Z]\\s+', '', x))\n",
    "\n",
    "# Substituting multiple spaces with single space\n",
    "test_nltk_title.title = test_nltk_title.title.apply(lambda x:re.sub(r'\\s+', ' ', x, flags=re.I))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Separamos en columnas diferentes cada uno de los sentimientos estimados para cada título.\n",
    "\n",
    "Añadimos un termino a cada sentimiento para evitar la situación en la que uno de ellos es igual a cero, tener un valor mínimo nos previene de tener que aplicar una transformación logarítmica en valores cero. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>id</th>\n",
       "      <th>sentiments</th>\n",
       "      <th>Positivo</th>\n",
       "      <th>Neutral</th>\n",
       "      <th>Negativo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Itnot about the money itabout sendingmessage</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>1.000001</td>\n",
       "      <td>0.000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>{'neg': 0.272, 'neu': 0.728, 'pos': 0.0, 'comp...</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>0.728001</td>\n",
       "      <td>0.272001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>1.000001</td>\n",
       "      <td>0.000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME CAN SOMEONE LESS RETARD...</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>{'neg': 0.204, 'neu': 0.658, 'pos': 0.138, 'co...</td>\n",
       "      <td>0.138001</td>\n",
       "      <td>0.658001</td>\n",
       "      <td>0.204001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME just thought our AMC ...</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>{'neg': 0.0, 'neu': 0.881, 'pos': 0.119, 'comp...</td>\n",
       "      <td>0.119001</td>\n",
       "      <td>0.881001</td>\n",
       "      <td>0.000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52135</th>\n",
       "      <td>Everythingve learned about being on Wall Stree...</td>\n",
       "      <td>od9xfn</td>\n",
       "      <td>{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>1.000001</td>\n",
       "      <td>0.000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52136</th>\n",
       "      <td>I Accidentally YOLOed Half My Portfolio After ...</td>\n",
       "      <td>od97ek</td>\n",
       "      <td>{'neg': 0.255, 'neu': 0.745, 'pos': 0.0, 'comp...</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>0.745001</td>\n",
       "      <td>0.255001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52137</th>\n",
       "      <td>53k TO 306K in just 2 days</td>\n",
       "      <td>od7008</td>\n",
       "      <td>{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>1.000001</td>\n",
       "      <td>0.000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52138</th>\n",
       "      <td>Average Annual Return on Investments for WSB</td>\n",
       "      <td>od77kx</td>\n",
       "      <td>{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>1.000001</td>\n",
       "      <td>0.000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52139</th>\n",
       "      <td>Genuine question about hypothetical stock shor...</td>\n",
       "      <td>od75w3</td>\n",
       "      <td>{'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>1.000001</td>\n",
       "      <td>0.000001</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>52140 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   title      id  \\\n",
       "0           Itnot about the money itabout sendingmessage  l6ulcx   \n",
       "1      Math Professor Scott Steiner says the numbers ...  l6uibd   \n",
       "2                                        Exit the system  l6uhhn   \n",
       "3      NEW SEC FILING FOR GME CAN SOMEONE LESS RETARD...  l6ugk6   \n",
       "4      Not to distract from GME just thought our AMC ...  l6ufgy   \n",
       "...                                                  ...     ...   \n",
       "52135  Everythingve learned about being on Wall Stree...  od9xfn   \n",
       "52136  I Accidentally YOLOed Half My Portfolio After ...  od97ek   \n",
       "52137                         53k TO 306K in just 2 days  od7008   \n",
       "52138       Average Annual Return on Investments for WSB  od77kx   \n",
       "52139  Genuine question about hypothetical stock shor...  od75w3   \n",
       "\n",
       "                                              sentiments  Positivo   Neutral  \\\n",
       "0      {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...  0.000001  1.000001   \n",
       "1      {'neg': 0.272, 'neu': 0.728, 'pos': 0.0, 'comp...  0.000001  0.728001   \n",
       "2      {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...  0.000001  1.000001   \n",
       "3      {'neg': 0.204, 'neu': 0.658, 'pos': 0.138, 'co...  0.138001  0.658001   \n",
       "4      {'neg': 0.0, 'neu': 0.881, 'pos': 0.119, 'comp...  0.119001  0.881001   \n",
       "...                                                  ...       ...       ...   \n",
       "52135  {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...  0.000001  1.000001   \n",
       "52136  {'neg': 0.255, 'neu': 0.745, 'pos': 0.0, 'comp...  0.000001  0.745001   \n",
       "52137  {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...  0.000001  1.000001   \n",
       "52138  {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...  0.000001  1.000001   \n",
       "52139  {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound...  0.000001  1.000001   \n",
       "\n",
       "       Negativo  \n",
       "0      0.000001  \n",
       "1      0.272001  \n",
       "2      0.000001  \n",
       "3      0.204001  \n",
       "4      0.000001  \n",
       "...         ...  \n",
       "52135  0.000001  \n",
       "52136  0.255001  \n",
       "52137  0.000001  \n",
       "52138  0.000001  \n",
       "52139  0.000001  \n",
       "\n",
       "[52140 rows x 6 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_nltk_title['sentiments'] = test_nltk_title['title'].apply(lambda x: sid.polarity_scores(' '.join(re.findall(r'\\w+',x.lower()))))\n",
    "test_nltk_title['Positivo'] = test_nltk_title['sentiments'].apply(lambda x: x['pos']+1*(10**-6)) \n",
    "test_nltk_title['Neutral'] = test_nltk_title['sentiments'].apply(lambda x: x['neu']+1*(10**-6))\n",
    "test_nltk_title['Negativo'] = test_nltk_title['sentiments'].apply(lambda x: x['neg']+1*(10**-6))\n",
    "\n",
    "test_nltk_title"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Creamos una función para identificar el sentimiento predomeinante de los títulos y lo almacenamos en una nueva columna. El resultado se codifica con un valor numérico que responde a: sentimiento negativo = 1, sentimiento neutral = 3, sentimiento positivo = 5."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "def nltk_sent_predominante(x):       \n",
    "    if x['Positivo'] > x['Neutral'] and x['Positivo'] > x['Negativo']:\n",
    "        return 5 # Codificación de sentimiento predominante Positivo\n",
    "    elif x['Negativo'] > x['Positivo'] and x['Negativo'] > x['Neutral']: \n",
    "        return 1 # Codificación de sentimiento predominante Negativo\n",
    "    else:\n",
    "        return 3 # Codificación de sentimiento predominante Neutro\n",
    "\n",
    "test_nltk_title['nltk_score_title'] = test_nltk_title[['Positivo','Neutral', 'Negativo']].apply(nltk_sent_predominante, axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Unimos el dataset con el scoring de los títulos obtenidos con la librería *NLTK* al dataset *maestro*."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>BERT_score_title</th>\n",
       "      <th>nltk_score_title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.611863e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:37</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:32</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>0</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading “to g...</td>\n",
       "      <td>28/01/2021 21:30</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:28</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:26</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52839</th>\n",
       "      <td>Everything I've learned about being on Wall St...</td>\n",
       "      <td>1011</td>\n",
       "      <td>od9xfn</td>\n",
       "      <td>https://v.redd.it/dfkjjyjae3971</td>\n",
       "      <td>87.0</td>\n",
       "      <td>1.625359e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 3:43</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52840</th>\n",
       "      <td>I Accidentally YOLOed Half My Portfolio After ...</td>\n",
       "      <td>510</td>\n",
       "      <td>od97ek</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>288.0</td>\n",
       "      <td>1.625357e+10</td>\n",
       "      <td>tl;dr at bottom\\n\\nSo after using DD from [u/C...</td>\n",
       "      <td>04/07/2021 2:55</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52841</th>\n",
       "      <td>$53k TO $306K in just 2 days.</td>\n",
       "      <td>1190</td>\n",
       "      <td>od7008</td>\n",
       "      <td>https://i.redd.it/k0pkc2m4i2971.png</td>\n",
       "      <td>237.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 0:42</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52842</th>\n",
       "      <td>Average Annual Return on Investments for WSB</td>\n",
       "      <td>74</td>\n",
       "      <td>od77kx</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>194.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>I was having a discussion with my friends abou...</td>\n",
       "      <td>04/07/2021 0:54</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52843</th>\n",
       "      <td>Genuine question about hypothetical stock shor...</td>\n",
       "      <td>19</td>\n",
       "      <td>od75w3</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>64.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>So I want to start this off by saying you prob...</td>\n",
       "      <td>04/07/2021 0:51</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>52844 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   title score      id  \\\n",
       "0      It's not about the money, it's about sending a...    55  l6ulcx   \n",
       "1      Math Professor Scott Steiner says the numbers ...   110  l6uibd   \n",
       "2                                        Exit the system     0  l6uhhn   \n",
       "3      NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...    29  l6ugk6   \n",
       "4      Not to distract from GME, just thought our AMC...    71  l6ufgy   \n",
       "...                                                  ...   ...     ...   \n",
       "52839  Everything I've learned about being on Wall St...  1011  od9xfn   \n",
       "52840  I Accidentally YOLOed Half My Portfolio After ...   510  od97ek   \n",
       "52841                      $53k TO $306K in just 2 days.  1190  od7008   \n",
       "52842       Average Annual Return on Investments for WSB    74  od77kx   \n",
       "52843  Genuine question about hypothetical stock shor...    19  od75w3   \n",
       "\n",
       "                                                     url  comms_num  \\\n",
       "0                        https://v.redd.it/6j75regs72e61        6.0   \n",
       "1                        https://v.redd.it/ah50lyny62e61       23.0   \n",
       "2      https://www.reddit.com/r/wallstreetbets/commen...       47.0   \n",
       "3      https://sec.report/Document/0001193125-21-019848/       74.0   \n",
       "4                    https://i.redd.it/4h2sukb662e61.jpg      156.0   \n",
       "...                                                  ...        ...   \n",
       "52839                    https://v.redd.it/dfkjjyjae3971       87.0   \n",
       "52840  https://www.reddit.com/r/wallstreetbets/commen...      288.0   \n",
       "52841                https://i.redd.it/k0pkc2m4i2971.png      237.0   \n",
       "52842  https://www.reddit.com/r/wallstreetbets/commen...      194.0   \n",
       "52843  https://www.reddit.com/r/wallstreetbets/commen...       64.0   \n",
       "\n",
       "            created                                               body  \\\n",
       "0      1.611863e+10                                                NaN   \n",
       "1      1.611862e+10                                                NaN   \n",
       "2      1.611862e+10  The CEO of NASDAQ pushed to halt trading “to g...   \n",
       "3      1.611862e+10                                                NaN   \n",
       "4      1.611862e+10                                                NaN   \n",
       "...             ...                                                ...   \n",
       "52839  1.625359e+10                                                NaN   \n",
       "52840  1.625357e+10  tl;dr at bottom\\n\\nSo after using DD from [u/C...   \n",
       "52841  1.625349e+10                                                NaN   \n",
       "52842  1.625349e+10  I was having a discussion with my friends abou...   \n",
       "52843  1.625349e+10  So I want to start this off by saying you prob...   \n",
       "\n",
       "              timestamp        date    year  month   day  BERT_score_title  \\\n",
       "0      28/01/2021 21:37  28/01/2021  2021.0    1.0  28.0               1.0   \n",
       "1      28/01/2021 21:32  28/01/2021  2021.0    1.0  28.0               2.0   \n",
       "2      28/01/2021 21:30  28/01/2021  2021.0    1.0  28.0               1.0   \n",
       "3      28/01/2021 21:28  28/01/2021  2021.0    1.0  28.0               5.0   \n",
       "4      28/01/2021 21:26  28/01/2021  2021.0    1.0  28.0               3.0   \n",
       "...                 ...         ...     ...    ...   ...               ...   \n",
       "52839   04/07/2021 3:43  04/07/2021  2021.0    7.0   4.0               5.0   \n",
       "52840   04/07/2021 2:55  04/07/2021  2021.0    7.0   4.0               1.0   \n",
       "52841   04/07/2021 0:42  04/07/2021  2021.0    7.0   4.0               1.0   \n",
       "52842   04/07/2021 0:54  04/07/2021  2021.0    7.0   4.0               3.0   \n",
       "52843   04/07/2021 0:51  04/07/2021  2021.0    7.0   4.0               4.0   \n",
       "\n",
       "       nltk_score_title  \n",
       "0                     3  \n",
       "1                     3  \n",
       "2                     3  \n",
       "3                     3  \n",
       "4                     3  \n",
       "...                 ...  \n",
       "52839                 3  \n",
       "52840                 3  \n",
       "52841                 3  \n",
       "52842                 3  \n",
       "52843                 3  \n",
       "\n",
       "[52844 rows x 14 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset = reddit_dataset.merge(\n",
    "    test_nltk_title[['id','nltk_score_title']], \n",
    "    how ='left', \n",
    "    left_on = 'id', \n",
    "    right_on = 'id'\n",
    ")\n",
    "\n",
    "reddit_dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.2. Clasificación sentimientos posts <a class=\"anchor\" id=\"section_5_2\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5.2.1 Modelo BERT <a class=\"anchor\" id=\"section_5_2_1\"></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "De una manera similar aplicamos la función para calcular el sentimiento del cuerpo de los posts con el modelo BERT y lo almacenamos en una nueva variable en el dataset. Para facilitar el desarrollo, y no calcular constantemente el sentimiento de los posts, una vez generado el sentimiento de los posts se ha exportado a csv el dataset. Si el csv no se encuentra disponible, sería el caso de una ejecución inicial, se calcularía el sentimiento de los posts del dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Indice</th>\n",
       "      <th>body</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24231</th>\n",
       "      <td>52101</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24232</th>\n",
       "      <td>52105</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24233</th>\n",
       "      <td>52107</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24234</th>\n",
       "      <td>52109</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24235</th>\n",
       "      <td>52110</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>24236 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Indice  body\n",
       "0           2     1\n",
       "1           6     1\n",
       "2           7     2\n",
       "3          10     5\n",
       "4          12     1\n",
       "...       ...   ...\n",
       "24231   52101     1\n",
       "24232   52105     1\n",
       "24233   52107     2\n",
       "24234   52109     2\n",
       "24235   52110     2\n",
       "\n",
       "[24236 rows x 2 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "if os.path.isfile('test.csv'):\n",
    "    BERT_score_body = pd.read_csv('test.csv')\n",
    "    BERT_score_body = BERT_score_body.rename(columns={'Unnamed: 0': 'Indice'})\n",
    "else:\n",
    "    BERT_score_body = reddit_dataset.dropna(subset = [\"body\"])['body'].apply(lambda x: BERT_sentiment_score(x[:512]))\n",
    "    BERT_score_body.to_csv(path_or_buf = './test.csv', index=True)\n",
    "    \n",
    "BERT_score_body"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "reddit_dataset = reddit_dataset.merge(\n",
    "    BERT_score_body, \n",
    "    how ='left', \n",
    "    left_index = True, \n",
    "    right_on = 'Indice'\n",
    ").reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body_x</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>BERT_score_title</th>\n",
       "      <th>nltk_score_title</th>\n",
       "      <th>Indice</th>\n",
       "      <th>body_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.611863e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:37</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:32</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>0</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading “to g...</td>\n",
       "      <td>28/01/2021 21:30</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:28</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:26</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52839</th>\n",
       "      <td>Everything I've learned about being on Wall St...</td>\n",
       "      <td>1011</td>\n",
       "      <td>od9xfn</td>\n",
       "      <td>https://v.redd.it/dfkjjyjae3971</td>\n",
       "      <td>87.0</td>\n",
       "      <td>1.625359e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 3:43</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>52839</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52840</th>\n",
       "      <td>I Accidentally YOLOed Half My Portfolio After ...</td>\n",
       "      <td>510</td>\n",
       "      <td>od97ek</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>288.0</td>\n",
       "      <td>1.625357e+10</td>\n",
       "      <td>tl;dr at bottom\\n\\nSo after using DD from [u/C...</td>\n",
       "      <td>04/07/2021 2:55</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>52840</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52841</th>\n",
       "      <td>$53k TO $306K in just 2 days.</td>\n",
       "      <td>1190</td>\n",
       "      <td>od7008</td>\n",
       "      <td>https://i.redd.it/k0pkc2m4i2971.png</td>\n",
       "      <td>237.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 0:42</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>52841</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52842</th>\n",
       "      <td>Average Annual Return on Investments for WSB</td>\n",
       "      <td>74</td>\n",
       "      <td>od77kx</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>194.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>I was having a discussion with my friends abou...</td>\n",
       "      <td>04/07/2021 0:54</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3</td>\n",
       "      <td>52842</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52843</th>\n",
       "      <td>Genuine question about hypothetical stock shor...</td>\n",
       "      <td>19</td>\n",
       "      <td>od75w3</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>64.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>So I want to start this off by saying you prob...</td>\n",
       "      <td>04/07/2021 0:51</td>\n",
       "      <td>04/07/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3</td>\n",
       "      <td>52843</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>52844 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   title score      id  \\\n",
       "0      It's not about the money, it's about sending a...    55  l6ulcx   \n",
       "1      Math Professor Scott Steiner says the numbers ...   110  l6uibd   \n",
       "2                                        Exit the system     0  l6uhhn   \n",
       "3      NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...    29  l6ugk6   \n",
       "4      Not to distract from GME, just thought our AMC...    71  l6ufgy   \n",
       "...                                                  ...   ...     ...   \n",
       "52839  Everything I've learned about being on Wall St...  1011  od9xfn   \n",
       "52840  I Accidentally YOLOed Half My Portfolio After ...   510  od97ek   \n",
       "52841                      $53k TO $306K in just 2 days.  1190  od7008   \n",
       "52842       Average Annual Return on Investments for WSB    74  od77kx   \n",
       "52843  Genuine question about hypothetical stock shor...    19  od75w3   \n",
       "\n",
       "                                                     url  comms_num  \\\n",
       "0                        https://v.redd.it/6j75regs72e61        6.0   \n",
       "1                        https://v.redd.it/ah50lyny62e61       23.0   \n",
       "2      https://www.reddit.com/r/wallstreetbets/commen...       47.0   \n",
       "3      https://sec.report/Document/0001193125-21-019848/       74.0   \n",
       "4                    https://i.redd.it/4h2sukb662e61.jpg      156.0   \n",
       "...                                                  ...        ...   \n",
       "52839                    https://v.redd.it/dfkjjyjae3971       87.0   \n",
       "52840  https://www.reddit.com/r/wallstreetbets/commen...      288.0   \n",
       "52841                https://i.redd.it/k0pkc2m4i2971.png      237.0   \n",
       "52842  https://www.reddit.com/r/wallstreetbets/commen...      194.0   \n",
       "52843  https://www.reddit.com/r/wallstreetbets/commen...       64.0   \n",
       "\n",
       "            created                                             body_x  \\\n",
       "0      1.611863e+10                                                NaN   \n",
       "1      1.611862e+10                                                NaN   \n",
       "2      1.611862e+10  The CEO of NASDAQ pushed to halt trading “to g...   \n",
       "3      1.611862e+10                                                NaN   \n",
       "4      1.611862e+10                                                NaN   \n",
       "...             ...                                                ...   \n",
       "52839  1.625359e+10                                                NaN   \n",
       "52840  1.625357e+10  tl;dr at bottom\\n\\nSo after using DD from [u/C...   \n",
       "52841  1.625349e+10                                                NaN   \n",
       "52842  1.625349e+10  I was having a discussion with my friends abou...   \n",
       "52843  1.625349e+10  So I want to start this off by saying you prob...   \n",
       "\n",
       "              timestamp        date    year  month   day  BERT_score_title  \\\n",
       "0      28/01/2021 21:37  28/01/2021  2021.0    1.0  28.0               1.0   \n",
       "1      28/01/2021 21:32  28/01/2021  2021.0    1.0  28.0               2.0   \n",
       "2      28/01/2021 21:30  28/01/2021  2021.0    1.0  28.0               1.0   \n",
       "3      28/01/2021 21:28  28/01/2021  2021.0    1.0  28.0               5.0   \n",
       "4      28/01/2021 21:26  28/01/2021  2021.0    1.0  28.0               3.0   \n",
       "...                 ...         ...     ...    ...   ...               ...   \n",
       "52839   04/07/2021 3:43  04/07/2021  2021.0    7.0   4.0               5.0   \n",
       "52840   04/07/2021 2:55  04/07/2021  2021.0    7.0   4.0               1.0   \n",
       "52841   04/07/2021 0:42  04/07/2021  2021.0    7.0   4.0               1.0   \n",
       "52842   04/07/2021 0:54  04/07/2021  2021.0    7.0   4.0               3.0   \n",
       "52843   04/07/2021 0:51  04/07/2021  2021.0    7.0   4.0               4.0   \n",
       "\n",
       "       nltk_score_title  Indice  body_y  \n",
       "0                     3       0     NaN  \n",
       "1                     3       1     NaN  \n",
       "2                     3       2     1.0  \n",
       "3                     3       3     NaN  \n",
       "4                     3       4     NaN  \n",
       "...                 ...     ...     ...  \n",
       "52839                 3   52839     NaN  \n",
       "52840                 3   52840     NaN  \n",
       "52841                 3   52841     NaN  \n",
       "52842                 3   52842     NaN  \n",
       "52843                 3   52843     NaN  \n",
       "\n",
       "[52844 rows x 16 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "reddit_dataset = reddit_dataset.rename(columns = {'body_x': 'body', 'body_y': 'BERT_score_body'}).drop(columns=['Indice'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>BERT_score_title</th>\n",
       "      <th>BERT_score_body</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.611863e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:37</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:32</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>0</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading “to g...</td>\n",
       "      <td>28/01/2021 21:30</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:28</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:26</td>\n",
       "      <td>28/01/2021</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title score      id  \\\n",
       "0  It's not about the money, it's about sending a...    55  l6ulcx   \n",
       "1  Math Professor Scott Steiner says the numbers ...   110  l6uibd   \n",
       "2                                    Exit the system     0  l6uhhn   \n",
       "3  NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...    29  l6ugk6   \n",
       "4  Not to distract from GME, just thought our AMC...    71  l6ufgy   \n",
       "\n",
       "                                                 url  comms_num       created  \\\n",
       "0                    https://v.redd.it/6j75regs72e61        6.0  1.611863e+10   \n",
       "1                    https://v.redd.it/ah50lyny62e61       23.0  1.611862e+10   \n",
       "2  https://www.reddit.com/r/wallstreetbets/commen...       47.0  1.611862e+10   \n",
       "3  https://sec.report/Document/0001193125-21-019848/       74.0  1.611862e+10   \n",
       "4                https://i.redd.it/4h2sukb662e61.jpg      156.0  1.611862e+10   \n",
       "\n",
       "                                                body         timestamp  \\\n",
       "0                                                NaN  28/01/2021 21:37   \n",
       "1                                                NaN  28/01/2021 21:32   \n",
       "2  The CEO of NASDAQ pushed to halt trading “to g...  28/01/2021 21:30   \n",
       "3                                                NaN  28/01/2021 21:28   \n",
       "4                                                NaN  28/01/2021 21:26   \n",
       "\n",
       "         date    year  month   day  BERT_score_title  BERT_score_body  \n",
       "0  28/01/2021  2021.0    1.0  28.0               1.0              NaN  \n",
       "1  28/01/2021  2021.0    1.0  28.0               2.0              NaN  \n",
       "2  28/01/2021  2021.0    1.0  28.0               1.0              1.0  \n",
       "3  28/01/2021  2021.0    1.0  28.0               5.0              NaN  \n",
       "4  28/01/2021  2021.0    1.0  28.0               3.0              NaN  "
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 5.2.2 Librería NLTK <a class=\"anchor\" id=\"section_5_2_2\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "nltk_body = reddit_dataset[['body', 'id']].copy()\n",
    "\n",
    "nltk_body = nltk_body.dropna()\n",
    "\n",
    "nltk_body['body'] = nltk_body.body.astype(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Remove handlers\n",
    "nltk_body.body = nltk_body.body.apply(lambda x:re.sub('@[^\\s]+','',x))\n",
    "\n",
    "# Remove URLS\n",
    "nltk_body.body = nltk_body.body.apply(lambda x:re.sub(r\"http\\S+\", \"\", x))\n",
    "\n",
    "# Remove all the special characters\n",
    "nltk_body.body = nltk_body.body.apply(lambda x:' '.join(re.findall(r'\\w+', x)))\n",
    "\n",
    "#remove all single characters\n",
    "nltk_body.body = nltk_body.body.apply(lambda x:re.sub(r'\\s+[a-zA-Z]\\s+', '', x))\n",
    "\n",
    "# Substituting multiple spaces with single space\n",
    "nltk_body.body = nltk_body.body.apply(lambda x:re.sub(r'\\s+', ' ', x, flags=re.I))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>body</th>\n",
       "      <th>id</th>\n",
       "      <th>sentiments</th>\n",
       "      <th>Positivo</th>\n",
       "      <th>Neutral</th>\n",
       "      <th>Negativo</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading to gi...</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>{'neg': 0.044, 'neu': 0.9, 'pos': 0.055, 'comp...</td>\n",
       "      <td>0.055001</td>\n",
       "      <td>0.900001</td>\n",
       "      <td>0.044001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Hedgefund whales are spreading disinfo saying ...</td>\n",
       "      <td>l6uf6d</td>\n",
       "      <td>{'neg': 0.06, 'neu': 0.913, 'pos': 0.026, 'com...</td>\n",
       "      <td>0.026001</td>\n",
       "      <td>0.913001</td>\n",
       "      <td>0.060001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Life isnfair My mother always told me that whe...</td>\n",
       "      <td>l6ub9l</td>\n",
       "      <td>{'neg': 0.164, 'neu': 0.772, 'pos': 0.065, 'co...</td>\n",
       "      <td>0.065001</td>\n",
       "      <td>0.772001</td>\n",
       "      <td>0.164001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>I believe right now is one of those rare oppor...</td>\n",
       "      <td>l6uao1</td>\n",
       "      <td>{'neg': 0.086, 'neu': 0.762, 'pos': 0.152, 'co...</td>\n",
       "      <td>0.152001</td>\n",
       "      <td>0.762001</td>\n",
       "      <td>0.086001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>You guys are champs GME who would have thought...</td>\n",
       "      <td>l6u9wu</td>\n",
       "      <td>{'neg': 0.051, 'neu': 0.832, 'pos': 0.117, 'co...</td>\n",
       "      <td>0.117001</td>\n",
       "      <td>0.832001</td>\n",
       "      <td>0.051001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>583558</th>\n",
       "      <td>Inductions User Cast Vote Votersinb4elonmusk C...</td>\n",
       "      <td>odgmug</td>\n",
       "      <td>{'neg': 0.059, 'neu': 0.918, 'pos': 0.024, 'co...</td>\n",
       "      <td>0.024001</td>\n",
       "      <td>0.918001</td>\n",
       "      <td>0.059001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>583562</th>\n",
       "      <td>Recently todaygas pipeline under the Gulf of M...</td>\n",
       "      <td>odb0ir</td>\n",
       "      <td>{'neg': 0.089, 'neu': 0.807, 'pos': 0.104, 'co...</td>\n",
       "      <td>0.104001</td>\n",
       "      <td>0.807001</td>\n",
       "      <td>0.089001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>583564</th>\n",
       "      <td>tl dr at bottom So after using DD fromCriand T...</td>\n",
       "      <td>od97ek</td>\n",
       "      <td>{'neg': 0.064, 'neu': 0.838, 'pos': 0.099, 'co...</td>\n",
       "      <td>0.099001</td>\n",
       "      <td>0.838001</td>\n",
       "      <td>0.064001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>583566</th>\n",
       "      <td>I was havingdiscussion with my friends about i...</td>\n",
       "      <td>od77kx</td>\n",
       "      <td>{'neg': 0.055, 'neu': 0.83, 'pos': 0.115, 'com...</td>\n",
       "      <td>0.115001</td>\n",
       "      <td>0.830001</td>\n",
       "      <td>0.055001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>583567</th>\n",
       "      <td>Sowant to start this off by saying you probabl...</td>\n",
       "      <td>od75w3</td>\n",
       "      <td>{'neg': 0.04, 'neu': 0.859, 'pos': 0.101, 'com...</td>\n",
       "      <td>0.101001</td>\n",
       "      <td>0.859001</td>\n",
       "      <td>0.040001</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>24261 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                     body      id  \\\n",
       "2       The CEO of NASDAQ pushed to halt trading to gi...  l6uhhn   \n",
       "6       Hedgefund whales are spreading disinfo saying ...  l6uf6d   \n",
       "7       Life isnfair My mother always told me that whe...  l6ub9l   \n",
       "10      I believe right now is one of those rare oppor...  l6uao1   \n",
       "12      You guys are champs GME who would have thought...  l6u9wu   \n",
       "...                                                   ...     ...   \n",
       "583558  Inductions User Cast Vote Votersinb4elonmusk C...  odgmug   \n",
       "583562  Recently todaygas pipeline under the Gulf of M...  odb0ir   \n",
       "583564  tl dr at bottom So after using DD fromCriand T...  od97ek   \n",
       "583566  I was havingdiscussion with my friends about i...  od77kx   \n",
       "583567  Sowant to start this off by saying you probabl...  od75w3   \n",
       "\n",
       "                                               sentiments  Positivo   Neutral  \\\n",
       "2       {'neg': 0.044, 'neu': 0.9, 'pos': 0.055, 'comp...  0.055001  0.900001   \n",
       "6       {'neg': 0.06, 'neu': 0.913, 'pos': 0.026, 'com...  0.026001  0.913001   \n",
       "7       {'neg': 0.164, 'neu': 0.772, 'pos': 0.065, 'co...  0.065001  0.772001   \n",
       "10      {'neg': 0.086, 'neu': 0.762, 'pos': 0.152, 'co...  0.152001  0.762001   \n",
       "12      {'neg': 0.051, 'neu': 0.832, 'pos': 0.117, 'co...  0.117001  0.832001   \n",
       "...                                                   ...       ...       ...   \n",
       "583558  {'neg': 0.059, 'neu': 0.918, 'pos': 0.024, 'co...  0.024001  0.918001   \n",
       "583562  {'neg': 0.089, 'neu': 0.807, 'pos': 0.104, 'co...  0.104001  0.807001   \n",
       "583564  {'neg': 0.064, 'neu': 0.838, 'pos': 0.099, 'co...  0.099001  0.838001   \n",
       "583566  {'neg': 0.055, 'neu': 0.83, 'pos': 0.115, 'com...  0.115001  0.830001   \n",
       "583567  {'neg': 0.04, 'neu': 0.859, 'pos': 0.101, 'com...  0.101001  0.859001   \n",
       "\n",
       "        Negativo  \n",
       "2       0.044001  \n",
       "6       0.060001  \n",
       "7       0.164001  \n",
       "10      0.086001  \n",
       "12      0.051001  \n",
       "...          ...  \n",
       "583558  0.059001  \n",
       "583562  0.089001  \n",
       "583564  0.064001  \n",
       "583566  0.055001  \n",
       "583567  0.040001  \n",
       "\n",
       "[24261 rows x 6 columns]"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nltk_body['sentiments'] = nltk_body['body'].apply(lambda x: sid.polarity_scores(' '.join(re.findall(r'\\w+',x.lower()))))\n",
    "nltk_body['Positivo'] = nltk_body['sentiments'].apply(lambda x: x['pos']+1*(10**-6)) \n",
    "nltk_body['Neutral'] = nltk_body['sentiments'].apply(lambda x: x['neu']+1*(10**-6))\n",
    "nltk_body['Negativo'] = nltk_body['sentiments'].apply(lambda x: x['neg']+1*(10**-6))\n",
    "\n",
    "nltk_body"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "nltk_body['nltk_score_body'] = nltk_body[['Positivo','Neutral', 'Negativo']].apply(nltk_sent_predominante, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>BERT_score_title</th>\n",
       "      <th>nltk_score_title</th>\n",
       "      <th>BERT_score_body</th>\n",
       "      <th>nltk_score_body_x</th>\n",
       "      <th>nltk_score_body_y</th>\n",
       "      <th>nltk_score_body</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.611863e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:37</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:32</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>0</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading “to g...</td>\n",
       "      <td>28/01/2021 21:30</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:28</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:26</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587643</th>\n",
       "      <td>Everything I've learned about being on Wall St...</td>\n",
       "      <td>1011</td>\n",
       "      <td>od9xfn</td>\n",
       "      <td>https://v.redd.it/dfkjjyjae3971</td>\n",
       "      <td>87.0</td>\n",
       "      <td>1.625359e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 3:43</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587644</th>\n",
       "      <td>I Accidentally YOLOed Half My Portfolio After ...</td>\n",
       "      <td>510</td>\n",
       "      <td>od97ek</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>288.0</td>\n",
       "      <td>1.625357e+10</td>\n",
       "      <td>tl;dr at bottom\\n\\nSo after using DD from [u/C...</td>\n",
       "      <td>04/07/2021 2:55</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587645</th>\n",
       "      <td>$53k TO $306K in just 2 days.</td>\n",
       "      <td>1190</td>\n",
       "      <td>od7008</td>\n",
       "      <td>https://i.redd.it/k0pkc2m4i2971.png</td>\n",
       "      <td>237.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 0:42</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587646</th>\n",
       "      <td>Average Annual Return on Investments for WSB</td>\n",
       "      <td>74</td>\n",
       "      <td>od77kx</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>194.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>I was having a discussion with my friends abou...</td>\n",
       "      <td>04/07/2021 0:54</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587647</th>\n",
       "      <td>Genuine question about hypothetical stock shor...</td>\n",
       "      <td>19</td>\n",
       "      <td>od75w3</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>64.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>So I want to start this off by saying you prob...</td>\n",
       "      <td>04/07/2021 0:51</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>587648 rows × 18 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    title score      id  \\\n",
       "0       It's not about the money, it's about sending a...    55  l6ulcx   \n",
       "1       Math Professor Scott Steiner says the numbers ...   110  l6uibd   \n",
       "2                                         Exit the system     0  l6uhhn   \n",
       "3       NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...    29  l6ugk6   \n",
       "4       Not to distract from GME, just thought our AMC...    71  l6ufgy   \n",
       "...                                                   ...   ...     ...   \n",
       "587643  Everything I've learned about being on Wall St...  1011  od9xfn   \n",
       "587644  I Accidentally YOLOed Half My Portfolio After ...   510  od97ek   \n",
       "587645                      $53k TO $306K in just 2 days.  1190  od7008   \n",
       "587646       Average Annual Return on Investments for WSB    74  od77kx   \n",
       "587647  Genuine question about hypothetical stock shor...    19  od75w3   \n",
       "\n",
       "                                                      url  comms_num  \\\n",
       "0                         https://v.redd.it/6j75regs72e61        6.0   \n",
       "1                         https://v.redd.it/ah50lyny62e61       23.0   \n",
       "2       https://www.reddit.com/r/wallstreetbets/commen...       47.0   \n",
       "3       https://sec.report/Document/0001193125-21-019848/       74.0   \n",
       "4                     https://i.redd.it/4h2sukb662e61.jpg      156.0   \n",
       "...                                                   ...        ...   \n",
       "587643                    https://v.redd.it/dfkjjyjae3971       87.0   \n",
       "587644  https://www.reddit.com/r/wallstreetbets/commen...      288.0   \n",
       "587645                https://i.redd.it/k0pkc2m4i2971.png      237.0   \n",
       "587646  https://www.reddit.com/r/wallstreetbets/commen...      194.0   \n",
       "587647  https://www.reddit.com/r/wallstreetbets/commen...       64.0   \n",
       "\n",
       "             created                                               body  \\\n",
       "0       1.611863e+10                                                NaN   \n",
       "1       1.611862e+10                                                NaN   \n",
       "2       1.611862e+10  The CEO of NASDAQ pushed to halt trading “to g...   \n",
       "3       1.611862e+10                                                NaN   \n",
       "4       1.611862e+10                                                NaN   \n",
       "...              ...                                                ...   \n",
       "587643  1.625359e+10                                                NaN   \n",
       "587644  1.625357e+10  tl;dr at bottom\\n\\nSo after using DD from [u/C...   \n",
       "587645  1.625349e+10                                                NaN   \n",
       "587646  1.625349e+10  I was having a discussion with my friends abou...   \n",
       "587647  1.625349e+10  So I want to start this off by saying you prob...   \n",
       "\n",
       "               timestamp       date    year  month   day  BERT_score_title  \\\n",
       "0       28/01/2021 21:37 2021-01-28  2021.0    1.0  28.0               1.0   \n",
       "1       28/01/2021 21:32 2021-01-28  2021.0    1.0  28.0               2.0   \n",
       "2       28/01/2021 21:30 2021-01-28  2021.0    1.0  28.0               1.0   \n",
       "3       28/01/2021 21:28 2021-01-28  2021.0    1.0  28.0               5.0   \n",
       "4       28/01/2021 21:26 2021-01-28  2021.0    1.0  28.0               3.0   \n",
       "...                  ...        ...     ...    ...   ...               ...   \n",
       "587643   04/07/2021 3:43 2021-04-07  2021.0    7.0   4.0               5.0   \n",
       "587644   04/07/2021 2:55 2021-04-07  2021.0    7.0   4.0               1.0   \n",
       "587645   04/07/2021 0:42 2021-04-07  2021.0    7.0   4.0               1.0   \n",
       "587646   04/07/2021 0:54 2021-04-07  2021.0    7.0   4.0               3.0   \n",
       "587647   04/07/2021 0:51 2021-04-07  2021.0    7.0   4.0               4.0   \n",
       "\n",
       "        nltk_score_title  BERT_score_body  nltk_score_body_x  \\\n",
       "0                      3              NaN                  3   \n",
       "1                      3              NaN                  3   \n",
       "2                      3              1.0                  3   \n",
       "3                      3              NaN                  3   \n",
       "4                      3              NaN                  3   \n",
       "...                  ...              ...                ...   \n",
       "587643                 3              NaN                  3   \n",
       "587644                 3              NaN                  3   \n",
       "587645                 3              NaN                  3   \n",
       "587646                 3              NaN                  3   \n",
       "587647                 3              NaN                  3   \n",
       "\n",
       "        nltk_score_body_y  nltk_score_body  \n",
       "0                     NaN              NaN  \n",
       "1                     NaN              NaN  \n",
       "2                     3.0              3.0  \n",
       "3                     NaN              NaN  \n",
       "4                     NaN              NaN  \n",
       "...                   ...              ...  \n",
       "587643                NaN              NaN  \n",
       "587644                3.0              3.0  \n",
       "587645                NaN              NaN  \n",
       "587646                3.0              3.0  \n",
       "587647                3.0              3.0  \n",
       "\n",
       "[587648 rows x 18 columns]"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset = reddit_dataset.merge(\n",
    "    nltk_body[['id','nltk_score_body']], \n",
    "    how ='left', \n",
    "    left_on = 'id', \n",
    "    right_on = 'id'\n",
    ")\n",
    "\n",
    "reddit_dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "      <th>BERT_score_title</th>\n",
       "      <th>nltk_score_title</th>\n",
       "      <th>BERT_score_body</th>\n",
       "      <th>nltk_score_body_x</th>\n",
       "      <th>nltk_score_body_y</th>\n",
       "      <th>nltk_score_body</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.611863e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:37</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:32</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:28</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:26</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>WE BREAKING THROUGH</td>\n",
       "      <td>405</td>\n",
       "      <td>l6uf7d</td>\n",
       "      <td>https://i.redd.it/2wef8tc062e61.png</td>\n",
       "      <td>84.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:26</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587639</th>\n",
       "      <td>Pro moves</td>\n",
       "      <td>22537</td>\n",
       "      <td>ode6ey</td>\n",
       "      <td>https://i.redd.it/c39slsudv4971.jpg</td>\n",
       "      <td>352.0</td>\n",
       "      <td>1.625377e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 8:39</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587640</th>\n",
       "      <td>Root Inc. (ROOT) Just Entered My Buy Zone. Int...</td>\n",
       "      <td>83</td>\n",
       "      <td>odcvds</td>\n",
       "      <td>https://i.redd.it/ufse5osed4971.png</td>\n",
       "      <td>130.0</td>\n",
       "      <td>1.625371e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 7:04</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587641</th>\n",
       "      <td>$3.2k -&gt; $37.8k in 1 day on SPCE $45c FDs</td>\n",
       "      <td>1341</td>\n",
       "      <td>odc0nu</td>\n",
       "      <td>https://i.redd.it/yij40o9u34971.png</td>\n",
       "      <td>305.0</td>\n",
       "      <td>1.625368e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 6:06</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587643</th>\n",
       "      <td>Everything I've learned about being on Wall St...</td>\n",
       "      <td>1011</td>\n",
       "      <td>od9xfn</td>\n",
       "      <td>https://v.redd.it/dfkjjyjae3971</td>\n",
       "      <td>87.0</td>\n",
       "      <td>1.625359e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 3:43</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>587645</th>\n",
       "      <td>$53k TO $306K in just 2 days.</td>\n",
       "      <td>1190</td>\n",
       "      <td>od7008</td>\n",
       "      <td>https://i.redd.it/k0pkc2m4i2971.png</td>\n",
       "      <td>237.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 0:42</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>561392 rows × 18 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    title  score      id  \\\n",
       "0       It's not about the money, it's about sending a...     55  l6ulcx   \n",
       "1       Math Professor Scott Steiner says the numbers ...    110  l6uibd   \n",
       "3       NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...     29  l6ugk6   \n",
       "4       Not to distract from GME, just thought our AMC...     71  l6ufgy   \n",
       "5                                     WE BREAKING THROUGH    405  l6uf7d   \n",
       "...                                                   ...    ...     ...   \n",
       "587639                                          Pro moves  22537  ode6ey   \n",
       "587640  Root Inc. (ROOT) Just Entered My Buy Zone. Int...     83  odcvds   \n",
       "587641          $3.2k -> $37.8k in 1 day on SPCE $45c FDs   1341  odc0nu   \n",
       "587643  Everything I've learned about being on Wall St...   1011  od9xfn   \n",
       "587645                      $53k TO $306K in just 2 days.   1190  od7008   \n",
       "\n",
       "                                                      url  comms_num  \\\n",
       "0                         https://v.redd.it/6j75regs72e61        6.0   \n",
       "1                         https://v.redd.it/ah50lyny62e61       23.0   \n",
       "3       https://sec.report/Document/0001193125-21-019848/       74.0   \n",
       "4                     https://i.redd.it/4h2sukb662e61.jpg      156.0   \n",
       "5                     https://i.redd.it/2wef8tc062e61.png       84.0   \n",
       "...                                                   ...        ...   \n",
       "587639                https://i.redd.it/c39slsudv4971.jpg      352.0   \n",
       "587640                https://i.redd.it/ufse5osed4971.png      130.0   \n",
       "587641                https://i.redd.it/yij40o9u34971.png      305.0   \n",
       "587643                    https://v.redd.it/dfkjjyjae3971       87.0   \n",
       "587645                https://i.redd.it/k0pkc2m4i2971.png      237.0   \n",
       "\n",
       "             created body         timestamp       date    year  month   day  \\\n",
       "0       1.611863e+10  NaN  28/01/2021 21:37 2021-01-28  2021.0    1.0  28.0   \n",
       "1       1.611862e+10  NaN  28/01/2021 21:32 2021-01-28  2021.0    1.0  28.0   \n",
       "3       1.611862e+10  NaN  28/01/2021 21:28 2021-01-28  2021.0    1.0  28.0   \n",
       "4       1.611862e+10  NaN  28/01/2021 21:26 2021-01-28  2021.0    1.0  28.0   \n",
       "5       1.611862e+10  NaN  28/01/2021 21:26 2021-01-28  2021.0    1.0  28.0   \n",
       "...              ...  ...               ...        ...     ...    ...   ...   \n",
       "587639  1.625377e+10  NaN   04/07/2021 8:39 2021-04-07  2021.0    7.0   4.0   \n",
       "587640  1.625371e+10  NaN   04/07/2021 7:04 2021-04-07  2021.0    7.0   4.0   \n",
       "587641  1.625368e+10  NaN   04/07/2021 6:06 2021-04-07  2021.0    7.0   4.0   \n",
       "587643  1.625359e+10  NaN   04/07/2021 3:43 2021-04-07  2021.0    7.0   4.0   \n",
       "587645  1.625349e+10  NaN   04/07/2021 0:42 2021-04-07  2021.0    7.0   4.0   \n",
       "\n",
       "        BERT_score_title  nltk_score_title  BERT_score_body  \\\n",
       "0                    1.0                 3              NaN   \n",
       "1                    2.0                 3              NaN   \n",
       "3                    5.0                 3              NaN   \n",
       "4                    3.0                 3              NaN   \n",
       "5                    1.0                 3              NaN   \n",
       "...                  ...               ...              ...   \n",
       "587639               5.0                 3              NaN   \n",
       "587640               4.0                 3              NaN   \n",
       "587641               1.0                 3              NaN   \n",
       "587643               5.0                 3              NaN   \n",
       "587645               1.0                 3              NaN   \n",
       "\n",
       "        nltk_score_body_x  nltk_score_body_y  nltk_score_body  \n",
       "0                       3                NaN              NaN  \n",
       "1                       3                NaN              NaN  \n",
       "3                       3                NaN              NaN  \n",
       "4                       3                NaN              NaN  \n",
       "5                       3                NaN              NaN  \n",
       "...                   ...                ...              ...  \n",
       "587639                  3                NaN              NaN  \n",
       "587640                  3                NaN              NaN  \n",
       "587641                  3                NaN              NaN  \n",
       "587643                  3                NaN              NaN  \n",
       "587645                  3                NaN              NaN  \n",
       "\n",
       "[561392 rows x 18 columns]"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_dataset[reddit_dataset['nltk_score_body']!=reddit_dataset['nltk_score_title']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.3. Análisis relación sentimientos y precios de la acción <a class=\"anchor\" id=\"section_5_3\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "reddit_dataset['date'] = pd.to_datetime(reddit_dataset['date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>score</th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>created</th>\n",
       "      <th>body</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>date</th>\n",
       "      <th>year</th>\n",
       "      <th>...</th>\n",
       "      <th>day</th>\n",
       "      <th>BERT_score_title</th>\n",
       "      <th>BERT_score_body</th>\n",
       "      <th>Date</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>week_day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's not about the money, it's about sending a...</td>\n",
       "      <td>55</td>\n",
       "      <td>l6ulcx</td>\n",
       "      <td>https://v.redd.it/6j75regs72e61</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.611863e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:37</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>...</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>193.60</td>\n",
       "      <td>58815810.0</td>\n",
       "      <td>265.00</td>\n",
       "      <td>483.0000</td>\n",
       "      <td>112.25</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Math Professor Scott Steiner says the numbers ...</td>\n",
       "      <td>110</td>\n",
       "      <td>l6uibd</td>\n",
       "      <td>https://v.redd.it/ah50lyny62e61</td>\n",
       "      <td>23.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:32</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>...</td>\n",
       "      <td>28.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>193.60</td>\n",
       "      <td>58815810.0</td>\n",
       "      <td>265.00</td>\n",
       "      <td>483.0000</td>\n",
       "      <td>112.25</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Exit the system</td>\n",
       "      <td>0</td>\n",
       "      <td>l6uhhn</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>The CEO of NASDAQ pushed to halt trading “to g...</td>\n",
       "      <td>28/01/2021 21:30</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>...</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>193.60</td>\n",
       "      <td>58815810.0</td>\n",
       "      <td>265.00</td>\n",
       "      <td>483.0000</td>\n",
       "      <td>112.25</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...</td>\n",
       "      <td>29</td>\n",
       "      <td>l6ugk6</td>\n",
       "      <td>https://sec.report/Document/0001193125-21-019848/</td>\n",
       "      <td>74.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:28</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>...</td>\n",
       "      <td>28.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>193.60</td>\n",
       "      <td>58815810.0</td>\n",
       "      <td>265.00</td>\n",
       "      <td>483.0000</td>\n",
       "      <td>112.25</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not to distract from GME, just thought our AMC...</td>\n",
       "      <td>71</td>\n",
       "      <td>l6ufgy</td>\n",
       "      <td>https://i.redd.it/4h2sukb662e61.jpg</td>\n",
       "      <td>156.0</td>\n",
       "      <td>1.611862e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28/01/2021 21:26</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>...</td>\n",
       "      <td>28.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>193.60</td>\n",
       "      <td>58815810.0</td>\n",
       "      <td>265.00</td>\n",
       "      <td>483.0000</td>\n",
       "      <td>112.25</td>\n",
       "      <td>Thursday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52135</th>\n",
       "      <td>Everything I've learned about being on Wall St...</td>\n",
       "      <td>1011</td>\n",
       "      <td>od9xfn</td>\n",
       "      <td>https://v.redd.it/dfkjjyjae3971</td>\n",
       "      <td>87.0</td>\n",
       "      <td>1.625359e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 3:43</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>177.97</td>\n",
       "      <td>4768261.0</td>\n",
       "      <td>183.22</td>\n",
       "      <td>184.4999</td>\n",
       "      <td>176.11</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52136</th>\n",
       "      <td>I Accidentally YOLOed Half My Portfolio After ...</td>\n",
       "      <td>510</td>\n",
       "      <td>od97ek</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>288.0</td>\n",
       "      <td>1.625357e+10</td>\n",
       "      <td>tl;dr at bottom\\n\\nSo after using DD from [u/C...</td>\n",
       "      <td>04/07/2021 2:55</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>177.97</td>\n",
       "      <td>4768261.0</td>\n",
       "      <td>183.22</td>\n",
       "      <td>184.4999</td>\n",
       "      <td>176.11</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52137</th>\n",
       "      <td>$53k TO $306K in just 2 days.</td>\n",
       "      <td>1190</td>\n",
       "      <td>od7008</td>\n",
       "      <td>https://i.redd.it/k0pkc2m4i2971.png</td>\n",
       "      <td>237.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04/07/2021 0:42</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>177.97</td>\n",
       "      <td>4768261.0</td>\n",
       "      <td>183.22</td>\n",
       "      <td>184.4999</td>\n",
       "      <td>176.11</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52138</th>\n",
       "      <td>Average Annual Return on Investments for WSB</td>\n",
       "      <td>74</td>\n",
       "      <td>od77kx</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>194.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>I was having a discussion with my friends abou...</td>\n",
       "      <td>04/07/2021 0:54</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>177.97</td>\n",
       "      <td>4768261.0</td>\n",
       "      <td>183.22</td>\n",
       "      <td>184.4999</td>\n",
       "      <td>176.11</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52139</th>\n",
       "      <td>Genuine question about hypothetical stock shor...</td>\n",
       "      <td>19</td>\n",
       "      <td>od75w3</td>\n",
       "      <td>https://www.reddit.com/r/wallstreetbets/commen...</td>\n",
       "      <td>64.0</td>\n",
       "      <td>1.625349e+10</td>\n",
       "      <td>So I want to start this off by saying you prob...</td>\n",
       "      <td>04/07/2021 0:51</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>2021.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>177.97</td>\n",
       "      <td>4768261.0</td>\n",
       "      <td>183.22</td>\n",
       "      <td>184.4999</td>\n",
       "      <td>176.11</td>\n",
       "      <td>Wednesday</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>52140 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                   title score      id  \\\n",
       "0      It's not about the money, it's about sending a...    55  l6ulcx   \n",
       "1      Math Professor Scott Steiner says the numbers ...   110  l6uibd   \n",
       "2                                        Exit the system     0  l6uhhn   \n",
       "3      NEW SEC FILING FOR GME! CAN SOMEONE LESS RETAR...    29  l6ugk6   \n",
       "4      Not to distract from GME, just thought our AMC...    71  l6ufgy   \n",
       "...                                                  ...   ...     ...   \n",
       "52135  Everything I've learned about being on Wall St...  1011  od9xfn   \n",
       "52136  I Accidentally YOLOed Half My Portfolio After ...   510  od97ek   \n",
       "52137                      $53k TO $306K in just 2 days.  1190  od7008   \n",
       "52138       Average Annual Return on Investments for WSB    74  od77kx   \n",
       "52139  Genuine question about hypothetical stock shor...    19  od75w3   \n",
       "\n",
       "                                                     url  comms_num  \\\n",
       "0                        https://v.redd.it/6j75regs72e61        6.0   \n",
       "1                        https://v.redd.it/ah50lyny62e61       23.0   \n",
       "2      https://www.reddit.com/r/wallstreetbets/commen...       47.0   \n",
       "3      https://sec.report/Document/0001193125-21-019848/       74.0   \n",
       "4                    https://i.redd.it/4h2sukb662e61.jpg      156.0   \n",
       "...                                                  ...        ...   \n",
       "52135                    https://v.redd.it/dfkjjyjae3971       87.0   \n",
       "52136  https://www.reddit.com/r/wallstreetbets/commen...      288.0   \n",
       "52137                https://i.redd.it/k0pkc2m4i2971.png      237.0   \n",
       "52138  https://www.reddit.com/r/wallstreetbets/commen...      194.0   \n",
       "52139  https://www.reddit.com/r/wallstreetbets/commen...       64.0   \n",
       "\n",
       "            created                                               body  \\\n",
       "0      1.611863e+10                                                NaN   \n",
       "1      1.611862e+10                                                NaN   \n",
       "2      1.611862e+10  The CEO of NASDAQ pushed to halt trading “to g...   \n",
       "3      1.611862e+10                                                NaN   \n",
       "4      1.611862e+10                                                NaN   \n",
       "...             ...                                                ...   \n",
       "52135  1.625359e+10                                                NaN   \n",
       "52136  1.625357e+10  tl;dr at bottom\\n\\nSo after using DD from [u/C...   \n",
       "52137  1.625349e+10                                                NaN   \n",
       "52138  1.625349e+10  I was having a discussion with my friends abou...   \n",
       "52139  1.625349e+10  So I want to start this off by saying you prob...   \n",
       "\n",
       "              timestamp       date    year  ...   day  BERT_score_title  \\\n",
       "0      28/01/2021 21:37 2021-01-28  2021.0  ...  28.0               1.0   \n",
       "1      28/01/2021 21:32 2021-01-28  2021.0  ...  28.0               2.0   \n",
       "2      28/01/2021 21:30 2021-01-28  2021.0  ...  28.0               1.0   \n",
       "3      28/01/2021 21:28 2021-01-28  2021.0  ...  28.0               5.0   \n",
       "4      28/01/2021 21:26 2021-01-28  2021.0  ...  28.0               3.0   \n",
       "...                 ...        ...     ...  ...   ...               ...   \n",
       "52135   04/07/2021 3:43 2021-04-07  2021.0  ...   4.0               5.0   \n",
       "52136   04/07/2021 2:55 2021-04-07  2021.0  ...   4.0               1.0   \n",
       "52137   04/07/2021 0:42 2021-04-07  2021.0  ...   4.0               1.0   \n",
       "52138   04/07/2021 0:54 2021-04-07  2021.0  ...   4.0               3.0   \n",
       "52139   04/07/2021 0:51 2021-04-07  2021.0  ...   4.0               4.0   \n",
       "\n",
       "       BERT_score_body       Date   Close      Volume    Open      High  \\\n",
       "0                  NaN 2021-01-28  193.60  58815810.0  265.00  483.0000   \n",
       "1                  NaN 2021-01-28  193.60  58815810.0  265.00  483.0000   \n",
       "2                  1.0 2021-01-28  193.60  58815810.0  265.00  483.0000   \n",
       "3                  NaN 2021-01-28  193.60  58815810.0  265.00  483.0000   \n",
       "4                  NaN 2021-01-28  193.60  58815810.0  265.00  483.0000   \n",
       "...                ...        ...     ...         ...     ...       ...   \n",
       "52135              NaN 2021-04-07  177.97   4768261.0  183.22  184.4999   \n",
       "52136              NaN 2021-04-07  177.97   4768261.0  183.22  184.4999   \n",
       "52137              NaN 2021-04-07  177.97   4768261.0  183.22  184.4999   \n",
       "52138              NaN 2021-04-07  177.97   4768261.0  183.22  184.4999   \n",
       "52139              NaN 2021-04-07  177.97   4768261.0  183.22  184.4999   \n",
       "\n",
       "          Low   week_day  \n",
       "0      112.25   Thursday  \n",
       "1      112.25   Thursday  \n",
       "2      112.25   Thursday  \n",
       "3      112.25   Thursday  \n",
       "4      112.25   Thursday  \n",
       "...       ...        ...  \n",
       "52135  176.11  Wednesday  \n",
       "52136  176.11  Wednesday  \n",
       "52137  176.11  Wednesday  \n",
       "52138  176.11  Wednesday  \n",
       "52139  176.11  Wednesday  \n",
       "\n",
       "[52140 rows x 21 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_gme = reddit_dataset.merge(\n",
    "    gme_dataset, \n",
    "    how ='left', \n",
    "    left_on = 'date', \n",
    "    right_on = 'Date'\n",
    ")\n",
    "\n",
    "reddit_gme"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font color='red'>Prueba para poder agregar por count de cada uno de los sentimientos</font>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "reddit_gme_filtered = reddit_gme[['date', 'score','comms_num', 'BERT_score_title', \n",
    "                                  #'BERT_score_body', \n",
    "                                  #'nltk_score_title', \n",
    "                                  #'nltk_score_body', \n",
    "                                  'Volume', 'Open', 'High', 'Low']].copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "reddit_gme_filtered['BERT_title_pos'] = np.where(reddit_gme_filtered['BERT_score_title'] == 5, 1, np.NaN)\n",
    "reddit_gme_filtered['BERT_title_neg'] = np.where(reddit_gme_filtered['BERT_score_title'] == 1, 1, np.NaN)\n",
    "reddit_gme_filtered['BERT_title_neu'] = np.where(reddit_gme_filtered['BERT_score_title'] == 3, 1, np.NaN)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>score</th>\n",
       "      <th>comms_num</th>\n",
       "      <th>BERT_score_title</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>BERT_title_pos</th>\n",
       "      <th>BERT_title_neg</th>\n",
       "      <th>BERT_title_neu</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>55</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>58815810.0</td>\n",
       "      <td>265.00</td>\n",
       "      <td>483.0000</td>\n",
       "      <td>112.25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>110</td>\n",
       "      <td>23.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>58815810.0</td>\n",
       "      <td>265.00</td>\n",
       "      <td>483.0000</td>\n",
       "      <td>112.25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>0</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>58815810.0</td>\n",
       "      <td>265.00</td>\n",
       "      <td>483.0000</td>\n",
       "      <td>112.25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>29</td>\n",
       "      <td>74.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>58815810.0</td>\n",
       "      <td>265.00</td>\n",
       "      <td>483.0000</td>\n",
       "      <td>112.25</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>71</td>\n",
       "      <td>156.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>58815810.0</td>\n",
       "      <td>265.00</td>\n",
       "      <td>483.0000</td>\n",
       "      <td>112.25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52135</th>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>1011</td>\n",
       "      <td>87.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4768261.0</td>\n",
       "      <td>183.22</td>\n",
       "      <td>184.4999</td>\n",
       "      <td>176.11</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52136</th>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>510</td>\n",
       "      <td>288.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4768261.0</td>\n",
       "      <td>183.22</td>\n",
       "      <td>184.4999</td>\n",
       "      <td>176.11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52137</th>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>1190</td>\n",
       "      <td>237.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4768261.0</td>\n",
       "      <td>183.22</td>\n",
       "      <td>184.4999</td>\n",
       "      <td>176.11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52138</th>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>74</td>\n",
       "      <td>194.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4768261.0</td>\n",
       "      <td>183.22</td>\n",
       "      <td>184.4999</td>\n",
       "      <td>176.11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52139</th>\n",
       "      <td>2021-04-07</td>\n",
       "      <td>19</td>\n",
       "      <td>64.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4768261.0</td>\n",
       "      <td>183.22</td>\n",
       "      <td>184.4999</td>\n",
       "      <td>176.11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>52140 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date score  comms_num  BERT_score_title      Volume    Open  \\\n",
       "0     2021-01-28    55        6.0               1.0  58815810.0  265.00   \n",
       "1     2021-01-28   110       23.0               2.0  58815810.0  265.00   \n",
       "2     2021-01-28     0       47.0               1.0  58815810.0  265.00   \n",
       "3     2021-01-28    29       74.0               5.0  58815810.0  265.00   \n",
       "4     2021-01-28    71      156.0               3.0  58815810.0  265.00   \n",
       "...          ...   ...        ...               ...         ...     ...   \n",
       "52135 2021-04-07  1011       87.0               5.0   4768261.0  183.22   \n",
       "52136 2021-04-07   510      288.0               1.0   4768261.0  183.22   \n",
       "52137 2021-04-07  1190      237.0               1.0   4768261.0  183.22   \n",
       "52138 2021-04-07    74      194.0               3.0   4768261.0  183.22   \n",
       "52139 2021-04-07    19       64.0               4.0   4768261.0  183.22   \n",
       "\n",
       "           High     Low  BERT_title_pos  BERT_title_neg  BERT_title_neu  \n",
       "0      483.0000  112.25             NaN             1.0             NaN  \n",
       "1      483.0000  112.25             NaN             NaN             NaN  \n",
       "2      483.0000  112.25             NaN             1.0             NaN  \n",
       "3      483.0000  112.25             1.0             NaN             NaN  \n",
       "4      483.0000  112.25             NaN             NaN             1.0  \n",
       "...         ...     ...             ...             ...             ...  \n",
       "52135  184.4999  176.11             1.0             NaN             NaN  \n",
       "52136  184.4999  176.11             NaN             1.0             NaN  \n",
       "52137  184.4999  176.11             NaN             1.0             NaN  \n",
       "52138  184.4999  176.11             NaN             NaN             1.0  \n",
       "52139  184.4999  176.11             NaN             NaN             NaN  \n",
       "\n",
       "[52140 rows x 11 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_gme_filtered"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date                datetime64[ns]\n",
       "score                       object\n",
       "comms_num                  float64\n",
       "BERT_score_title           float64\n",
       "Volume                     float64\n",
       "Open                       float64\n",
       "High                       float64\n",
       "Low                        float64\n",
       "BERT_title_pos             float64\n",
       "BERT_title_neg             float64\n",
       "BERT_title_neu             float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_gme_filtered.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "reddit_gme_filtered['score'] = reddit_gme_filtered['score'].apply(pd.to_numeric, errors='coerce')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font color='red'>Acaba prueba</font>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>score</th>\n",
       "      <th>BERT_title_pos</th>\n",
       "      <th>BERT_title_neu</th>\n",
       "      <th>BERT_title_neg</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-09-29</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-02</th>\n",
       "      <td>4230.302036</td>\n",
       "      <td>315</td>\n",
       "      <td>75</td>\n",
       "      <td>371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-03</th>\n",
       "      <td>3044.586466</td>\n",
       "      <td>51</td>\n",
       "      <td>15</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-04</th>\n",
       "      <td>1632.507246</td>\n",
       "      <td>48</td>\n",
       "      <td>15</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-05</th>\n",
       "      <td>197.207547</td>\n",
       "      <td>21</td>\n",
       "      <td>6</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-03</th>\n",
       "      <td>2621.477564</td>\n",
       "      <td>106</td>\n",
       "      <td>26</td>\n",
       "      <td>138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-04</th>\n",
       "      <td>3406.000000</td>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-05</th>\n",
       "      <td>1820.152174</td>\n",
       "      <td>36</td>\n",
       "      <td>13</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-06</th>\n",
       "      <td>368.213043</td>\n",
       "      <td>85</td>\n",
       "      <td>20</td>\n",
       "      <td>87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-07</th>\n",
       "      <td>713.754717</td>\n",
       "      <td>25</td>\n",
       "      <td>5</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>158 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  score  BERT_title_pos  BERT_title_neu  BERT_title_neg\n",
       "date                                                                   \n",
       "2020-09-29     4.000000               0               0               1\n",
       "2021-01-02  4230.302036             315              75             371\n",
       "2021-01-03  3044.586466              51              15              42\n",
       "2021-01-04  1632.507246              48              15              56\n",
       "2021-01-05   197.207547              21               6              23\n",
       "...                 ...             ...             ...             ...\n",
       "2021-12-03  2621.477564             106              26             138\n",
       "2021-12-04  3406.000000              19               3              18\n",
       "2021-12-05  1820.152174              36              13              33\n",
       "2021-12-06   368.213043              85              20              87\n",
       "2021-12-07   713.754717              25               5              17\n",
       "\n",
       "[158 rows x 4 columns]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_gme_agg = reddit_gme_filtered.groupby(['date']).agg({'score':'mean',\n",
    "                                                            'BERT_title_pos': 'count',\n",
    "                                                            'BERT_title_neu': 'count',\n",
    "                                                            'BERT_title_neg': 'count'\n",
    "                                                            #'BERT_score_title':'sum',\n",
    "                                                            #'BERT_score_body': agg_sentimiento_predominante,\n",
    "                                                            #'nltk_score_title':'sum',\n",
    "                                                            #'nltk_score_body':'sum'\n",
    "                                                           })\n",
    "\n",
    "reddit_gme_agg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>score</th>\n",
       "      <th>BERT_title_pos</th>\n",
       "      <th>BERT_title_neu</th>\n",
       "      <th>BERT_title_neg</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-09-29</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-02</th>\n",
       "      <td>4230.302036</td>\n",
       "      <td>315</td>\n",
       "      <td>75</td>\n",
       "      <td>371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-03</th>\n",
       "      <td>3044.586466</td>\n",
       "      <td>51</td>\n",
       "      <td>15</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-04</th>\n",
       "      <td>1632.507246</td>\n",
       "      <td>48</td>\n",
       "      <td>15</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-05</th>\n",
       "      <td>197.207547</td>\n",
       "      <td>21</td>\n",
       "      <td>6</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-06</th>\n",
       "      <td>1529.558824</td>\n",
       "      <td>15</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  score  BERT_title_pos  BERT_title_neu  BERT_title_neg\n",
       "date                                                                   \n",
       "2020-09-29     4.000000               0               0               1\n",
       "2021-01-02  4230.302036             315              75             371\n",
       "2021-01-03  3044.586466              51              15              42\n",
       "2021-01-04  1632.507246              48              15              56\n",
       "2021-01-05   197.207547              21               6              23\n",
       "2021-01-06  1529.558824              15               7              10"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_gme_agg.head(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "DatetimeIndex: 158 entries, 2020-09-29 to 2021-12-07\n",
      "Data columns (total 4 columns):\n",
      " #   Column          Non-Null Count  Dtype  \n",
      "---  ------          --------------  -----  \n",
      " 0   score           158 non-null    float64\n",
      " 1   BERT_title_pos  158 non-null    int64  \n",
      " 2   BERT_title_neu  158 non-null    int64  \n",
      " 3   BERT_title_neg  158 non-null    int64  \n",
      "dtypes: float64(1), int64(3)\n",
      "memory usage: 6.2 KB\n"
     ]
    }
   ],
   "source": [
    "reddit_gme_agg.info()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: sklearn in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (0.0)\n",
      "Requirement already satisfied: scikit-learn in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from sklearn) (0.24.2)\n",
      "Requirement already satisfied: scipy>=0.19.1 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from scikit-learn->sklearn) (1.6.2)\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from scikit-learn->sklearn) (2.2.0)\n",
      "Requirement already satisfied: joblib>=0.11 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from scikit-learn->sklearn) (1.0.1)\n",
      "Requirement already satisfied: numpy>=1.13.3 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from scikit-learn->sklearn) (1.18.5)\n"
     ]
    }
   ],
   "source": [
    "!pip install sklearn\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeRegressor\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting statsmodels\n",
      "  Downloading statsmodels-0.12.2-cp38-none-win_amd64.whl (9.4 MB)\n",
      "Requirement already satisfied: scipy>=1.1 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from statsmodels) (1.6.2)\n",
      "Requirement already satisfied: pandas>=0.21 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from statsmodels) (1.2.4)\n",
      "Requirement already satisfied: numpy>=1.15 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from statsmodels) (1.18.5)\n",
      "Collecting patsy>=0.5\n",
      "  Downloading patsy-0.5.1-py2.py3-none-any.whl (231 kB)\n",
      "Requirement already satisfied: pytz>=2017.3 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from pandas>=0.21->statsmodels) (2021.1)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from pandas>=0.21->statsmodels) (2.8.2)\n",
      "Requirement already satisfied: six in c:\\users\\hocana\\anaconda3\\envs\\env\\lib\\site-packages (from patsy>=0.5->statsmodels) (1.16.0)\n",
      "Installing collected packages: patsy, statsmodels\n",
      "Successfully installed patsy-0.5.1 statsmodels-0.12.2\n"
     ]
    }
   ],
   "source": [
    "!pip install statsmodels\n",
    "\n",
    "from scipy.stats import pearsonr\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import r2_score\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import statsmodels.api as sm\n",
    "import statsmodels.formula.api as smf\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coeficiente de correlación de Pearson:  -0.10406909616620694\n",
      "P-value:  0.19316343535858113\n"
     ]
    }
   ],
   "source": [
    "corr_test = pearsonr(x = reddit_gme_agg['score'], y =  reddit_gme_agg['BERT_title_pos'])\n",
    "print(\"Coeficiente de correlación de Pearson: \", corr_test[0])\n",
    "print(\"P-value: \", corr_test[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coeficiente de correlación de Pearson:  -0.12238084643974713\n",
      "P-value:  0.1255587894857701\n"
     ]
    }
   ],
   "source": [
    "corr_test = pearsonr(x = reddit_gme_agg['score'], y =  reddit_gme_agg['BERT_title_neu'])\n",
    "print(\"Coeficiente de correlación de Pearson: \", corr_test[0])\n",
    "print(\"P-value: \", corr_test[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coeficiente de correlación de Pearson:  -0.1064050351330957\n",
      "P-value:  0.1833037628355862\n"
     ]
    }
   ],
   "source": [
    "corr_test = pearsonr(x = reddit_gme_agg['score'], y =  reddit_gme_agg['BERT_title_neg'])\n",
    "print(\"Coeficiente de correlación de Pearson: \", corr_test[0])\n",
    "print(\"P-value: \", corr_test[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = reddit_gme_agg[['BERT_title_pos', 'BERT_title_neu', 'BERT_title_neg']]\n",
    "y = reddit_gme_agg['score']\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [],
   "source": [
    "X.head(6)\n",
    "y.head(6)\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "                                        X,\n",
    "                                        y.values.reshape(-1,1),\n",
    "                                        train_size   = 0.8,\n",
    "                                        random_state = 1234,\n",
    "                                        shuffle      = True\n",
    "                                    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "datos_train = pd.DataFrame(\n",
    "                     np.hstack((X_train, y_train)),\n",
    "                     columns=['BERT_title_pos', 'BERT_title_neu', 'BERT_title_neg','score']\n",
    "               )\n",
    " \n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import pearsonr\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import r2_score\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import statsmodels.api as sm\n",
    "import statsmodels.formula.api as smf\n",
    "from statsmodels.stats.anova import anova_lm\n",
    "from scipy import stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:                  score   R-squared:                       0.031\n",
      "Model:                            OLS   Adj. R-squared:                  0.007\n",
      "Method:                 Least Squares   F-statistic:                     1.298\n",
      "Date:                Fri, 10 Sep 2021   Prob (F-statistic):              0.278\n",
      "Time:                        03:55:49   Log-Likelihood:                -1113.8\n",
      "No. Observations:                 126   AIC:                             2236.\n",
      "Df Residuals:                     122   BIC:                             2247.\n",
      "Df Model:                           3                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "==================================================================================\n",
      "                     coef    std err          t      P>|t|      [0.025      0.975]\n",
      "----------------------------------------------------------------------------------\n",
      "Intercept       2171.8833    169.949     12.780      0.000    1835.451    2508.315\n",
      "BERT_title_pos     7.2891      6.593      1.106      0.271      -5.763      20.341\n",
      "BERT_title_neu   -11.0186      7.712     -1.429      0.156     -26.285       4.248\n",
      "BERT_title_neg    -3.8256      4.604     -0.831      0.408     -12.940       5.289\n",
      "==============================================================================\n",
      "Omnibus:                       46.462   Durbin-Watson:                   1.812\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              108.347\n",
      "Skew:                           1.498   Prob(JB):                     2.97e-24\n",
      "Kurtosis:                       6.415   Cond. No.                         983.\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"
     ]
    }
   ],
   "source": [
    "modelo = smf.ols(formula = 'score ~ BERT_title_pos + BERT_title_neu + BERT_title_neg', data = datos_train)\n",
    "modelo = modelo.fit()\n",
    "print(modelo.summary())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train = y_train.flatten()\n",
    "prediccion_train = modelo.predict(exog = X_train)\n",
    "residuos_train   = prediccion_train - y_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ShapiroResult(statistic=0.8903982639312744, pvalue=3.6312268747451526e-08)"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "shapiro_test = stats.shapiro(residuos_train)\n",
    "shapiro_test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "El error (rmse) de test es: 1247.2453412120622\n"
     ]
    }
   ],
   "source": [
    "X_test = sm.add_constant(X_test, prepend=True)\n",
    "predicciones = modelo.predict(exog = X_test)\n",
    "rmse = mean_squared_error(\n",
    "        y_true  = y_test,\n",
    "        y_pred  = predicciones,\n",
    "        squared = False\n",
    "       )\n",
    "print(\"\")\n",
    "print(f\"El error (rmse) de test es: {rmse}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeRegressor(max_depth=13, random_state=123)"
      ]
     },
     "execution_count": 159,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Árbol de decisión\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "                                        reddit_gme_agg.drop(columns = \"score\"),\n",
    "                                        reddit_gme_agg['score'],\n",
    "                                        random_state = 123\n",
    "                                    )\n",
    "# Creación del modelo\n",
    "# ------------------------------------------------------------------------------\n",
    "modelo2 = DecisionTreeRegressor(\n",
    "            max_depth         = 13,\n",
    "            random_state      = 123\n",
    "          )\n",
    "\n",
    "# Entrenamiento del modelo\n",
    "# ------------------------------------------------------------------------------\n",
    "modelo2.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "El error (rmse) de test es: 2151.2382174186314\n"
     ]
    }
   ],
   "source": [
    "predicciones2 = modelo2.predict(X = X_test)\n",
    "\n",
    "rmse = mean_squared_error(\n",
    "        y_true  = y_test,\n",
    "        y_pred  = predicciones2,\n",
    "        squared = False\n",
    "       )\n",
    "print(f\"El error (rmse) de test es: {rmse}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>score</th>\n",
       "      <th>BERT_title_pos</th>\n",
       "      <th>BERT_title_neu</th>\n",
       "      <th>BERT_title_neg</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-09-29</th>\n",
       "      <td>4.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-02</th>\n",
       "      <td>4230.302036</td>\n",
       "      <td>315</td>\n",
       "      <td>75</td>\n",
       "      <td>371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-03</th>\n",
       "      <td>3044.586466</td>\n",
       "      <td>51</td>\n",
       "      <td>15</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-04</th>\n",
       "      <td>1632.507246</td>\n",
       "      <td>48</td>\n",
       "      <td>15</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-05</th>\n",
       "      <td>197.207547</td>\n",
       "      <td>21</td>\n",
       "      <td>6</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-01-06</th>\n",
       "      <td>1529.558824</td>\n",
       "      <td>15</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  score  BERT_title_pos  BERT_title_neu  BERT_title_neg\n",
       "date                                                                   \n",
       "2020-09-29     4.000000               0               0               1\n",
       "2021-01-02  4230.302036             315              75             371\n",
       "2021-01-03  3044.586466              51              15              42\n",
       "2021-01-04  1632.507246              48              15              56\n",
       "2021-01-05   197.207547              21               6              23\n",
       "2021-01-06  1529.558824              15               7              10"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reddit_gme_agg.head(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Importancia de los predictores en el modelo\n",
      "-------------------------------------------\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>predictor</th>\n",
       "      <th>importancia</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BERT_title_pos</td>\n",
       "      <td>0.341826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BERT_title_neg</td>\n",
       "      <td>0.333484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>BERT_title_neu</td>\n",
       "      <td>0.324691</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        predictor  importancia\n",
       "0  BERT_title_pos     0.341826\n",
       "2  BERT_title_neg     0.333484\n",
       "1  BERT_title_neu     0.324691"
      ]
     },
     "execution_count": 162,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "importancia_predictores = pd.DataFrame(\n",
    "                            {'predictor': reddit_gme_agg.drop(columns = \"score\").columns,\n",
    "                             'importancia': modelo2.feature_importances_}\n",
    "                            )\n",
    "print(\"Importancia de los predictores en el modelo\")\n",
    "print(\"-------------------------------------------\")\n",
    "importancia_predictores.sort_values('importancia', ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 7. Conclusiones <a class=\"anchor\" id=\"cap7\"></a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
